{"version":3,"file":"static/js/701.5d7bd6ed.chunk.js","mappings":"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","sources":["components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Notices/Notices.styled.jsx","components/ModalAddNotice/ModalAddNoticeValidation.jsx","components/ModalAddNotice/ModalAddNoticeFirstStep.jsx","components/ModalAddNotice/ModalAddNoticeSecondStep.jsx","components/ModalAddNotice/ModalAddNotice.jsx","components/NoticesCategoryNav/NoticesCategoryNav.styled.jsx","components/NoticesCategoryNav/NoticesCategoryNav.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchStyled = styled.div`\n    position: relative;\n\n    input {\n        width: 280px;\n        height: 40px;\n        margin-bottom: 28px;\n        padding: 10px 42px 10px 12px;\n        box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n        border-radius: 20px;\n        border: none;\n        \n        font-weight: 500;\n        font-size: 16px;\n        line-height: 1,4;\n        letter-spacing: 0.04em;\n        color: #535353;\n    }\n\n    button {\n        position: absolute;\n        top: 6px;\n        right: 12px;\n\n        height: 28px;\n        padding: 0;\n        \n        background-color: #ffffff;\n        border: none;\n\n        cursor: pointer;\n    }\n\n    @media (min-width: 768px) {\n        text-align: center;\n\n        input {\n            width: 608px;\n            height: 44px;\n            \n            margin-bottom: 40px;\n            padding: 8px 48px 8px 20px;            \n            border-radius: 40px;\n            \n            \n            font-weight: 500;\n            font-size: 20px;\n        }\n        \n        button {           \n            top: 8px;\n            right: 60px;\n        }\n    }\n\n    @media (min-width: 1280px) {        \n        button {             \n            right: 330px;\n        }\n    }\n`;","\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { AiOutlineSearch, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { SearchStyled } from \"./Search.styled\";\n\nconst Search = ({ getValueMethod }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    getValueMethod(inputValue);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputValue])\n\n\n  return (\n    <SearchStyled>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n\n      <button\n        type=\"button\"\n        onClick={() => setInputValue('')}\n      >\n        {inputValue ? <AiOutlineCloseCircle size={28} color={'#111111'} /> : <AiOutlineSearch size={24} color={'#111111'} />}\n      </button>\n      \n    </SearchStyled>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nexport const NoticesStyled = styled.div`    \n    padding-top: 40px;\n    padding-bottom: 68px;\n\n    h1 {\n        margin-bottom: 28px;\n        font-size: 24px;\n        line-height: 1.4;\n        text-align: center;\n        color: #111111;\n    }\n\n    @media (min-width: 768px) {\n        h1 {\n            margin-bottom: 40px;\n            font-size: 48px;\n        }               \n    }\n`;\n","import * as yup from 'yup';\n\nconst locationRegexp = /[A-Z][a-z]*,\\s[A-Z][a-z]*/;\nconst titleRegexp = /^[a-zA-Z\\s]*$/;\n\nexport const validationFistStep = yup.object().shape({\n  title: yup\n    .string()\n    .trim(true)\n    .min(2, 'Too short!')\n    .max(48, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces')\n    .required('Title is required'),\n  name: yup\n    .string()\n    .trim(true)\n    .min(2, 'Too short!')\n    .max(16, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces'),\n    // .required('Name is required'),\n  breed: yup\n    .string()\n    .trim()\n    .min(2, 'Too short!')\n    .max(24, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces')\n    .required('Breed is required'),\n  //   birthday: yup.date().nullable(),\n});\n\nconst FILE_SIZE = 5242880;\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png'];\n\nexport const validationSecondStep = yup.object().shape({\n  location: yup\n    .string()\n    .trim()\n    .matches(locationRegexp, 'For example, \"Brovary, Kyiv\" or \"Dubno, Rivne\"')\n    .required('Location is required'),\n  comments: yup\n    .string()\n    .min(8, 'Too short!')\n    .max(120, 'Too long!')\n    .required('Comments is required'),\n  price: yup.number().min(1, 'Price has to be more than 0'),\n  sex: yup.string().required('Choose sex'),\n  image: yup\n    .mixed()\n    .test(\n      'FILE_SIZE',\n      'Uploaded file is too big',\n      value => !value || (value && value.size <= FILE_SIZE)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n});\n","import { Field, Formik } from 'formik';\nimport { validationFistStep } from './ModalAddNoticeValidation';\n\nconst categories = [\n  { name: 'lost', value: 'lost', id: '1' },\n  { name: 'found', value: 'found', id: '2' },\n  { name: 'In good hands', value: 'for-free', id: '3' },\n  { name: 'sell', value: 'sell', id: '4' },\n];\n\nexport const ModalAddNoticeFistStep = ({\n  onClose,\n  setStepIndex,\n  setFormData,\n  formData,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        name: '',\n        birthday: '',\n        breed: '',\n        category: '',\n      }}\n      validationSchema={validationFistStep}\n      onSubmit={values => {\n        const data = { ...formData, ...values };\n        setFormData(data);\n        setStepIndex(1);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        // setFieldValue,\n        handleBlur,\n        isValid,\n        dirty,\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <h1>Add pet</h1>\n          <ul>\n            {categories.map(category => (\n              <li key={category.id}>\n                <label\n                  className={values.category === category.value ? 'active' : ''}\n                >\n                  {category.name}\n                  <Field type=\"radio\" name=\"category\" value={category.value} />\n                </label>\n              </li>\n            ))}\n          </ul>\n          <div>{errors.category}</div>\n          <div>\n            <label>\n              <div>\n                Tittle of ad<span>*</span>\n              </div>\n              <Field\n                name=\"title\"\n                type=\"text\"\n                placeholder=\"Type name\"\n                value={values.title}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </label>\n            <div>{errors.title}</div>\n          </div>\n          <div>\n            <label>\n              <div>Name pet</div>\n              <Field\n                name=\"name\"\n                type=\"text\"\n                placeholder=\"Type name pet\"\n                value={values.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </label>\n            <div>{errors.name}</div>\n          </div>\n          <div>\n            <label>\n              <div>Date of birth</div>\n              <input\n                name=\"date\"\n                type=\"text\"\n                placeholder=\"Type date of birth\"\n                value={values.birthday}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </label>\n          </div>\n          <div className=\"label\">\n            <label>\n              <div>Breed</div>\n              <Field\n                name=\"breed\"\n                type=\"text\"\n                placeholder=\"Type breed\"\n                value={values.breed}\n                onChange={handleChange}\n                onBlur={handleBlur}\n              />\n            </label>\n            <div>{errors.breed && touched.breed}</div>\n          </div>\n          <div>\n            <button\n             type=\"button\"\n              onClick={onClose}\n            >\n              Cancel\n            </button>\n            {dirty && isValid ? (\n              <button className=\"activeNext\" type=\"submit\">\n                Next\n              </button>\n            ) : (\n              <button className=\"inactiveNext\" disabled={true}>\n                Next\n              </button>\n            )}\n          </div>\n        </form>\n      )}\n    </Formik>\n  );\n};\n","import { Field, Formik } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { addNotice } from \"redux/notices/operations\";\nimport { validationSecondStep } from \"./ModalAddNoticeValidation\";\n\nexport const ModalAddNoticeSecondStep = ({ setStepIndex, formData, onClose }) => {\n    const dispatch = useDispatch();\n    \n    const submitAddNoticeForm = (data) => {\n        console.log(data)\n        dispatch(\n            addNotice(\n                {data}\n                // {\n                // title: values.title,\n                // name: values.name,\n                // birthday: values.birthday,\n                // breed: values.breed,\n                // sex: values.sex,\n                // location: values.location,\n                // price: values.price,\n                // image: values.image,\n                // comments:values.comments,\n                // }\n            )\n        );\n    }\n    return (\n        <div>\n            <Formik\n                initialValues={{\n                sex: '',\n                location: '',\n                price: '',\n                image: null,\n                comments: '',\n                }}\n                validationSchema={validationSecondStep}\n                onSubmit={values => {\n                const data = { ...formData, ...values };\n                submitAddNoticeForm(data);\n\n                // console.log(values);\n                }}\n            >\n            {({\n                values,\n                errors,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n                setFieldValue,\n                isValid,\n                dirty,\n            }) => (\n                <form onSubmit={handleSubmit}>\n                <h1>Add pet</h1>\n                <label>\n                    The sex<span>*</span>:\n                </label>\n                <div>\n                    <label className={values.sex === 'male' ? 'active' : ''}>\n                    <Field type=\"radio\" name=\"sex\" value=\"male\" />\n                    <div>\n                        icon\n                    </div>\n                    <span>Male</span>\n                    </label>\n                    <label className={values.sex === 'female' ? 'active' : ''}>\n                    <Field type=\"radio\" name=\"sex\" value=\"female\" />\n                    <div>\n                        icon\n                    </div>\n                    <span>Female</span>\n                    </label>\n                </div>\n                <div>{errors.sex}</div>\n                <div>\n                    <label>\n                    <div>\n                        Location<span>*</span>:\n                    </div>\n                    <Field\n                        name=\"location\"\n                        type=\"text\"\n                        placeholder=\"City, Region\"\n                        value={values.location}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                    />\n                    </label>\n                    <div>{errors.location}</div>\n                </div>\n                {formData.category === 'sell' && (\n                    <div>\n                    <label>\n                        <div>\n                        Price<span>*</span>:\n                        </div>\n                        <Field\n                        name=\"price\"\n                        type=\"text\"\n                        value={values.price}\n                        placeholder=\"Type price\"\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        />\n                    </label>\n                    <div>{errors.price}</div>\n                    </div>\n                )}\n                <div className=\"file\">\n                    <div>Load the pet’s image:</div>\n                    <div>\n                    <label>\n                        <input\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={event => {\n                            setFieldValue('upload', event.currentTarget.files);\n                        }}\n                        />\n                    </label>\n                    </div>\n                    <div>{errors.image}</div>\n                </div>\n                <label>\n                    <div>\n                    Comments<span>*</span>\n                    </div>\n                    <textarea\n                    type=\"text\"\n                    name=\"comments\"\n                    placeholder=\"Type comment\"\n                    defaultValue={values.comments}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    />\n                </label>\n                <div>{errors.comments}</div>\n                <div>\n                    {dirty && isValid ? (\n                    <button className=\"activeDone\" type=\"submit\">\n                        Done\n                    </button>\n                    ) : (\n                    <button className=\"inactiveDone\" disabled={true}>\n                        Done\n                    </button>\n                    )}\n                    <button\n                    type=\"button\"\n                    onClick={() => {\n                        setStepIndex(0);\n                    }}\n                    >\n                    Back\n                    </button>\n                </div>\n                </form>\n            )}\n            </Formik>\n        </div>\n    )\n}","import { useState } from \"react\";\nimport { ModalAddNoticeFistStep } from \"./ModalAddNoticeFirstStep\";\nimport { ModalAddNoticeSecondStep } from \"./ModalAddNoticeSecondStep\";\n// import { useDispatch } from \"react-redux\";\n\nexport const ModalAddNotice = ({ onClose }) => {\n    \n    const [activeStepIndex, setActiveStepIndex] = useState(0);\n    const [formData, setFormData] = useState({});\n\n    return (\n        <div>\n            {activeStepIndex === 0 && (\n                <ModalAddNoticeFistStep\n                    onClose={onClose}\n                    setStepIndex={setActiveStepIndex}\n                    formData={formData}\n                    setFormData={setFormData}\n                />\n            )}\n            {activeStepIndex === 1 && (\n                <ModalAddNoticeSecondStep\n                    setStepIndex={setActiveStepIndex}\n                    formData={formData}\n                    onClose={onClose}\n                />\n            )}\n        </div>\n    )\n}","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const NoticesCategoryNavStyled = styled.ul`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 30px;\n    list-style: none;\n\n    @media (min-width: 768px) {\n        margin-bottom: 60px;\n        gap: 12px;\n    }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: flex;\n    padding: 8px 28px;\n    /* margin-right: 10px; */\n    border: 2px solid #F59256;\n    border-radius: 40px;\n    text-decoration: none;\n\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #FFFFFF;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    &.active {\n        background-color: #F59256;\n        color: #ffffff;\n        pointer-events: none;\n    }\n\n    @media (min-width: 768px) {\n        padding: 10px 28px;\n        font-size: 20px;\n        line-height: 1.35;\n        letter-spacing: 0.04em;\n    }\n`;\n\n\nexport const AddPetStyled = styled.button`\n    position: fixed;\n    bottom: 40px;\n    right: 20px;\n    z-index: 10;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n\n    width: 80px;\n    height: 80px;\n    padding: 16px;\n    border-radius: 50%;\n    border: none;\n    color: #ffffff;\n    background: #F59256;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    font-size: 12px;\n    line-height: 1.33;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        position: static;\n        z-index: 0;\n\n        flex-direction: row-reverse;\n        flex-wrap: nowrap;\n\n        margin-left: auto;\n        width: 129px;\n        height: 44px;\n        padding: 0;\n        border-radius: 40px;\n        background-color: #FDF7F2;\n        box-shadow: none;\n        \n        \n\n        span {\n            display: block;\n            width: 73px;\n            font-weight: 500;\n            font-size: 20px;\n            line-height: 1.35;\n            color: #111111;\n        }\n\n        div {\n            margin-left: 12px;\n            height: 32px;\n            background-color: #f06b19;\n            border-radius: 50%;\n            \n        }\n        \n    }\n`;\n\n\nexport const NavLinkContainerStyled = styled.div`\n    @media (min-width: 768px) {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n\n\n","// import { NavLink } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { ModalAddNotice } from 'components/ModalAddNotice/ModalAddNotice';\nimport { useAuth, useToggle } from 'hooks';\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { NavLinkContainerStyled, NoticesCategoryNavStyled, NavLinkStyled, AddPetStyled } from './NoticesCategoryNav.styled';\n\nconst NotiesCategoryNav = () => {\n  const { isLoggedIn } = useAuth();\n  const { isOpen, open, close } = useToggle();\n\n\n  // const isLoggedIn = true;\n\n  return (    \n    <NavLinkContainerStyled>\n      <NoticesCategoryNavStyled>        \n        <li>\n          <NavLinkStyled to=\"lost-found\">lost/found</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"in-good-hands\">in good hands</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"sell\" >sell</NavLinkStyled>\n        </li>\n        {\n          isLoggedIn && \n          <>\n            <li>\n              <NavLinkStyled to=\"favorite-ads\">favorite ads</NavLinkStyled>\n            </li>\n            <li>\n              <NavLinkStyled to=\"my-ads\">my ads</NavLinkStyled>\n            </li>\n          </>            \n        }\n      </ NoticesCategoryNavStyled>\n      <AddPetStyled type='button' onClick={open}><div><AiOutlinePlus size={32} /></div> <span>Add pet</span></AddPetStyled>\n      {isLoggedIn && <Modal isOpen={isOpen} onClose={close}>\n        <ModalAddNotice onClose={close}/>\n      </Modal>}\n    </ NavLinkContainerStyled>\n    \n    \n  );\n};\n\nexport default NotiesCategoryNav;\n","import { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport {NoticesStyled } from './Notices.styled';\nimport { useEffect } from 'react';\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { searchNoticesSet } from 'redux/notices/searchSlice';\n\nimport Search from 'components/Search/Search';\nimport NoticesCategoryNav from 'components/NoticesCategoryNav/NoticesCategoryNav';\nimport { Categories } from 'utils/noticesCatList';\n\n\nconst Notices = () => {\n  const navigate = useNavigate();\n  const { categoryName } = useParams();\n  const { isLoggedIn } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn &&\n      (categoryName === Categories.FAVORITE_ADS || categoryName === Categories.MY_ADS))\n      navigate('/login');    \n\n    if (!Object.values(Categories).includes(categoryName)) navigate(Categories.SELL);\n   \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categoryName, isLoggedIn]);\n\n  const getInputValue = value => dispatch(searchNoticesSet(value));\n\n\n\n  return (\n    <NoticesStyled>\n      <h1>Find your favorite pet</h1>\n      \n      <Search getValueMethod={getInputValue} />\n      \n      <NoticesCategoryNav />\n\n      <Outlet />\n    </NoticesStyled>\n  );\n};\n\nexport default Notices;\n"],"names":["SearchStyled","styled","getValueMethod","useState","inputValue","setInputValue","useEffect","type","placeholder","value","onChange","e","target","onClick","size","color","NoticesStyled","titleRegexp","validationFistStep","yup","shape","title","trim","min","max","matches","required","name","breed","SUPPORTED_FORMATS","validationSecondStep","location","comments","price","sex","image","test","includes","categories","id","ModalAddNoticeFistStep","onClose","setStepIndex","setFormData","formData","initialValues","birthday","category","validationSchema","onSubmit","values","data","errors","touched","handleChange","handleSubmit","handleBlur","isValid","dirty","map","className","onBlur","disabled","ModalAddNoticeSecondStep","dispatch","useDispatch","console","log","addNotice","submitAddNoticeForm","setFieldValue","event","currentTarget","files","defaultValue","ModalAddNotice","activeStepIndex","setActiveStepIndex","NoticesCategoryNavStyled","NavLinkStyled","NavLink","AddPetStyled","NavLinkContainerStyled","isLoggedIn","useAuth","useToggle","isOpen","open","close","to","Modal","navigate","useNavigate","categoryName","useParams","Categories","Object","Search","searchNoticesSet","NoticesCategoryNav"],"sourceRoot":""}