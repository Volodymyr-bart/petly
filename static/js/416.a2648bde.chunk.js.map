{"version":3,"file":"static/js/416.a2648bde.chunk.js","mappings":"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","sources":["components/AuthContainer/AuthContainer.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterFirstStep.jsx","components/RegisterForm/RegisterSecondStep.jsx","utils/checkEmail.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainerStyled = styled.div`\n   margin: 0;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    left: 80px;\n    top: 276px;\n    background: #FFFFFF;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding; 60px 80px;;\n    \n  }\n`;","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        \n        }\n\n        @media screen and (min-width: 1280px) {\n      \n        }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;  \n  }\n\n`;\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    padding: 11px 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    background: #FDF7F2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n        :hover,\n        :focus {\n        cursor: pointer;\n        }\n    \n\n        \n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    font-size: 18px;\n    color: #9d3158;\n    margin-top: -10px;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 40px;\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\npadding: 10px 28px;\nbackground: #F59256;\nborder-radius: 40px;\nborder: none;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #FFFFFF;\n`;\n\nexport const ButtonBack = styled.button`\nwidth: 100%;\npadding: 10px 28px;\nbackground: #FFFFFF;\nborder-radius: 40px;\nborder: 2px solid #F59256;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\n\nexport const TextStyled = styled.p`\ntext-align: center;\nletter-spacing: 0.04em;\n> a {\n  text-decoration-line: underline;\n  color: #3091eb;\n}\n`;","import { FieldStyled,  ErrorMessageStyled, InputContainer } from './RegisterForm.styled';\n\nexport const RegisterFirstStep = ({validateEmail}) => {\n\n  return (\n        \n            <InputContainer>\n               <FieldStyled type=\"email\" name=\"email\" placeholder='Email' validate={validateEmail}/>\n               < ErrorMessageStyled name=\"email\" component=\"span\"/>\n              <FieldStyled type=\"password\" name=\"password\" placeholder='Password'  autoComplete='off'/>\n              < ErrorMessageStyled name=\"password\" component=\"span\"/>\n              <FieldStyled type=\"password\" name=\"confirmPassword\" placeholder='Confirm password' autoComplete='off'/>\n              < ErrorMessageStyled name=\"confirmPassword\" component=\"span\"/>\n              </InputContainer>\n\n  );\n};","import { FieldStyled,  ErrorMessageStyled, InputContainer } from './RegisterForm.styled';\n\nexport const RegisterSecondStep = () => {\n  \n  \n  console.log()\n  return (<div>\n            <InputContainer>\n              <FieldStyled type=\"text\" name=\"name\" placeholder='Name' />\n              <ErrorMessageStyled name=\"name\" component=\"span\"/> \n              <FieldStyled type=\"text\" name=\"address\" placeholder='City' />\n              < ErrorMessageStyled name=\"address\" component=\"span\"/>\n              <FieldStyled type=\"phone\" name=\"phone\" placeholder='Mobile phone' />\n              < ErrorMessageStyled name=\"phone\" component=\"span\"/>\n              </InputContainer>\n              </div>\n  );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://petly-mmyb.onrender.com/api';\n\nexport const checkEmail = async (emailValue) => {\n    await axios.post('auth/checkEmail', {email: emailValue});\n}\n  ","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport { RegisterFirstStep } from './RegisterFirstStep';\nimport React, { useState } from 'react';\nimport { RegisterSecondStep } from './RegisterSecondStep';\nimport * as yup from 'yup';\nimport \"yup-phone\";\nimport { NavLink } from 'react-router-dom';\nimport { Button, FormStyled, TextStyled, ButtonBox, ButtonBack} from './RegisterForm.styled';\nimport { checkEmail } from 'utils/checkEmail';\n\nconst nameRegexp = /^[a-z ,.'-]+$/i;\n\nconst passRegexp = /^\\S+$/;\n\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  address: '',\n  phone: ''\n}\nconst schema = yup.object({\n  email: yup.string().email(\"Invalid email addres\").required(\"The email is required\"),\n  password: yup.string()\n    .matches(passRegexp, \"The password cannot contain spaces\")\n    .min(7)\n    .max(32)\n    .required(\"The password is required\"),\n  confirmPassword: yup.string().label('confirm password').required().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  name: yup.string()\n    .matches(nameRegexp, \"The name must contain only English letters\")\n    .required(\"The name is required\"),\n  address: yup.string().required(),\n  phone: yup.string().phone(\"UA\", true, \"Phone number must be in format '+380XXXXXXXXX'\").required(),\n});   \n\n\nexport const RegisterForm = () => {\n  const [isLastStep, setisLastStep] = useState(false);\n  console.log(isLastStep)\n\n  const dispatch = useDispatch();\n  \n  const handleSubmit = (values, {resetForm}) => {\n    dispatch(\n      register({\n        email: values.email,\n        password: values.password,\n        name: values.name,\n        address: values.address,\n        phone: values.phone\n      })\n    );\n    resetForm();   \n  };\n\n  \n\n \n  return (\n    <Formik \n      validationSchema={schema}\n      initialValues={initialValues} \n      onSubmit={handleSubmit}\n\n   >\n    {({handleChange, values, errors, touched, setFieldTouched, formikHelpers, setFieldError}) => {\n      const handleClickButton = () => {\n        \n        if ((values.email === '' && values.password === '' && values.confirmPassword === '') && !(touched.email && touched.password && touched.confirm)) {\n          setFieldTouched(\"email\");\n          setFieldTouched(\"password\");\n          setFieldTouched(\"confirm\");\n          return;\n        }\n        \n        if (errors.email || errors.password || errors.confirmPassword) return\n\n        checkEmail(values.email).then((res) => setisLastStep(true)).catch(error => {\n          setFieldError('email', \"The email is already in use\")\n        })\n        \n\n\n      }\n\n\n\n\n     return (<FormStyled autoComplete='off' >\n        {!isLastStep ?  <RegisterFirstStep /> : <RegisterSecondStep setFieldTouched={setFieldTouched}/>}\n       \n        <ButtonBox>\n\n            {isLastStep ? (<><Button type=\"submit\">Register</Button>\n            <ButtonBack type=\"button\" onClick={() => setisLastStep(false)}>Back</ButtonBack></>) : <Button type=\"button\" onClick={handleClickButton}>Next</Button>}\n\n        </ButtonBox>\n        <TextStyled>Already have an account? <NavLink to=\"/login\">login</NavLink></TextStyled>\n      </FormStyled>\n      )}}\n   </Formik>)\n};\n\n","import styled from 'styled-components';\n\nimport bgMobImg from '../../imagesAuth/bg-img-auth-mob.png';\nimport bgTabImg from '../../imagesAuth/bg-img-auth-tab.png';\nimport bgWebImg from '../../imagesAuth/bg-img-auth-web.png';\n\nexport const Container = styled.section`\nwidth: 100%;\npadding: 26px 20px 103px 20px;\n// height: calc(100vh - 74px);\nbackground-image: url('${bgMobImg}');\nbackground-repeat: no-repeat;\nbackground-size: contain;\nbackground-position: bottom;\n\n@media screen and (min-width: 320px) {\n      width: 320px;\n\n@media screen and (min-width: 768px) {\n    width: 768px;\n  padding: 128px 80px 223px 80px;\n\n  background-image: url('${bgTabImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n}\n@media screen and (min-width: 1280px) {\n    width: 1280px;\n  padding: 26px 331px 113px 331px;\n  background-image: url('${bgWebImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom 50px;\n}\n`;\n\nexport const TitleStyled = styled.h2`\n    // font-family: 'Manrope';\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.38;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: #111111;\n    margin-bottom: 40px;\n`;","import { AuthContainerStyled } from 'components/AuthContainer/AuthContainer.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Container, TitleStyled } from 'pages/Register/Register.styled';\n\nexport default function Register() {\n  return (\n    <Container>\n    <AuthContainerStyled>\n        <TitleStyled>Registration</TitleStyled>\n        <RegisterForm />\n    </AuthContainerStyled>\n    </Container>\n  );\n}\n"],"names":["AuthContainerStyled","styled","FormStyled","Form","InputContainer","FieldStyled","Field","ErrorMessageStyled","ErrorMessage","ButtonBox","Button","ButtonBack","TextStyled","RegisterFirstStep","validateEmail","type","name","placeholder","validate","component","autoComplete","RegisterSecondStep","console","log","axios","checkEmail","emailValue","email","initialValues","password","confirmPassword","address","phone","schema","yup","required","matches","min","max","label","oneOf","RegisterForm","useState","isLastStep","setisLastStep","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","handleChange","errors","touched","setFieldTouched","setFieldError","formikHelpers","onClick","confirm","then","res","catch","error","to","Container","bgMobImg","bgTabImg","bgWebImg","TitleStyled","Register"],"sourceRoot":""}