{"version":3,"file":"static/js/987.4d593545.chunk.js","mappings":"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","sources":["components/AuthContainer/AuthContainer.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterFirstStep.jsx","components/RegisterForm/Autocomplete.jsx","components/RegisterForm/RegisterSecondStep.jsx","utils/checkEmail.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainerStyled = styled.div`\n  margin: 0;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    left: 80px;\n    top: 276px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 60px 80px;\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        \n        }\n\n        @media screen and (min-width: 1280px) {\n      \n        }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 28px;\n  @media screen and (min-width: 768px) {\n    margin-bottom: 40px;  \n  }\n\n`;\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    padding: 11px 45px 11px 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    background: #FDF7F2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n        :hover,\n        :focus {\n        cursor: pointer;\n        outline: 2px solid #F59256;\n        }     \n`;\n\nexport const ListStyled = styled.ul`\n  position: absolute;\n  left: 23px;\n  background: #FDF7F2;\n  list-style: none;\n  width: 234px;\n  padding: 0;\n  margin: 0;\n  border-bottom-left-radius: 40px;\n  border-bottom-right-radius: 40px;\n\n  \n\n  @media screen and (min-width: 768px) {\n    width: 402px;  \n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 412px; \n  }\n\n`;\n\nexport const ItemStyled = styled.li`\n  padding: 11px 14px;\n  background: #FDF7F2;\n  :last-child {\n  border-radius: 40px;\n  };\n \n  :hover {\n    background: #F59256;\n      cursor: pointer;\n      color: #FDF7F2;\n    }    \n\n`;\n\nexport const CityStyled = styled.p`\n\n`;\n\nexport const RegionStyled = styled.span`\n\n`;\n\nexport const ShowPassword = styled.div`\n    position: absolute;\n    bottom: 10px;\n    right: 5%;\n\n`;\n\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    font-size: 18px;\n    color: #9d3158;\n    margin-top: -10px;\n`;\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 40px;\n`;\n\nexport const Button = styled.button`\nwidth: 100%;\npadding: 10px 28px;\nbackground: #F59256;\nborder-radius: 40px;\nborder: none;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #FFFFFF;\n`;\n\nexport const ButtonBack = styled.button`\nwidth: 100%;\npadding: 10px 28px;\nbackground: #FFFFFF;\nborder-radius: 40px;\nborder: 2px solid #F59256;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\n\nexport const TextStyled = styled.p`\ntext-align: center;\nletter-spacing: 0.04em;\n> a {\n  text-decoration-line: underline;\n  color: #3091eb;\n}\n`;","import {useState} from 'react';\nimport { FieldStyled,  ErrorMessageStyled, InputContainer,  ShowPassword } from './RegisterForm.styled';\nimport { RxEyeClosed, RxEyeOpen} from 'react-icons/rx'\n\n\n\nexport const RegisterFirstStep = ({validateEmail}) => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n\n\n  return (\n        \n            <InputContainer>\n               <FieldStyled type=\"email\" name=\"email\" placeholder='Email' validate={validateEmail}/>\n               < ErrorMessageStyled name=\"email\" component=\"span\"/>\n               <div style={{position: 'relative'}}>\n              <FieldStyled type={showPassword ? \"text\" : \"password\"}  name=\"password\" placeholder='Password'  autoComplete='off'/>\n              <ShowPassword onClick={() => setShowPassword(!showPassword)}>{showPassword ? <RxEyeOpen size={18} /> : <RxEyeClosed size={18}/> }</ShowPassword>\n              </div>\n              < ErrorMessageStyled name=\"password\" component=\"span\"/>\n\n              <div style={{position: 'relative'}}>\n              <FieldStyled type={showConfirmPassword ? \"text\" : \"password\"}  name=\"confirmPassword\" placeholder='Confirm password' autoComplete='off'/>\n              <ShowPassword onClick={() => setShowConfirmPassword(!showConfirmPassword)}>{showConfirmPassword ? <RxEyeOpen size={18} /> : <RxEyeClosed size={18}/> }</ShowPassword>\n              </div>\n              < ErrorMessageStyled name=\"confirmPassword\" component=\"span\"/>\n              </InputContainer>\n\n  );\n};","import usePlacesAutocomplete from \"use-places-autocomplete\";\nimport useOnclickOutside from \"react-cool-onclickoutside\";\nimport { CityStyled, FieldStyled, ItemStyled, ListStyled, RegionStyled } from \"./RegisterForm.styled\";\n  \nexport const PlacesAutocomplete = ({saveAddress}) => {\n    const {\n      ready,\n      value,\n      suggestions: { status, data },\n      setValue,\n      clearSuggestions,\n    } = usePlacesAutocomplete({\n      requestOptions: {\n        /* Define search scope here */\n      },\n      debounce: 300,\n    });\n    const ref = useOnclickOutside(() => {\n      // When user clicks outside of the component, we can dismiss\n      // the searched suggestions by calling this method\n      clearSuggestions();\n    });\n  \n    const handleInput = (e) => {\n      // Update the keyword of the input element\n      setValue(e.target.value);\n      \n    };\n  \n    const handleSelect = ({ description }) => () => {\n        // When user selects a place, we can replace the keyword without request data from API\n        // by setting the second parameter to \"false\"\n        setValue(description, false);\n        clearSuggestions();\n        saveAddress(description)          \n    };\n  \n    const renderSuggestions = () =>\n      data.map((suggestion) => {\n        const {\n          place_id,\n          structured_formatting: { main_text, secondary_text },\n        } = suggestion;\n  \n        return (\n          <ItemStyled key={place_id} onClick={handleSelect(suggestion)}>\n            <CityStyled>{main_text},<RegionStyled>{secondary_text}</RegionStyled></CityStyled>\n          </ItemStyled>\n        );\n    });\n  \n    return (\n      <div ref={ref} style={{position: 'relative'}}>\n        <FieldStyled\n          value={value}\n          onChange={handleInput}\n          disabled={!ready}\n          placeholder=\"City\"\n          name=\"address\"\n          type\n        />\n        {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n        {status === \"OK\" && <ListStyled>{renderSuggestions()}</ListStyled>}\n      </div>\n    );\n  };","import { PlacesAutocomplete } from './Autocomplete';\nimport { FieldStyled,  ErrorMessageStyled, InputContainer } from './RegisterForm.styled';\n\nexport const RegisterSecondStep = ({saveAddress}) => {\n  \n  return (<div>\n            <InputContainer>\n              <FieldStyled type=\"text\" name=\"name\" placeholder='Name' />\n              <ErrorMessageStyled name=\"name\" component=\"span\"/> \n              <PlacesAutocomplete saveAddress={saveAddress}/>\n              <ErrorMessageStyled name=\"address\" component=\"span\"/>\n              <FieldStyled type=\"phone\" name=\"phone\" placeholder='Mobile phone' />\n              <ErrorMessageStyled name=\"phone\" component=\"span\"/>\n              </InputContainer>\n              </div>\n  );\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://petly-mmyb.onrender.com/api';\n\nexport const checkEmail = async (emailValue) => {\n    await axios.post('auth/checkEmail', {email: emailValue});\n}\n  ","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport { RegisterFirstStep } from './RegisterFirstStep';\nimport React, { useState } from 'react';\nimport { RegisterSecondStep } from './RegisterSecondStep';\nimport * as yup from 'yup';\nimport \"yup-phone\";\nimport { NavLink } from 'react-router-dom';\nimport { Button, FormStyled, TextStyled, ButtonBox, ButtonBack} from './RegisterForm.styled';\nimport { checkEmail } from 'utils/checkEmail';\n\nconst nameRegexp = /^[a-z ,.'-]+$/i;\n\nconst passRegexp = /^\\S+$/;\n\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  address: '',\n  phone: ''\n}\nconst schema = yup.object({\n  email: yup.string().email(\"Invalid email addres\").required(\"Email is required\"),\n  password: yup.string()\n    .matches(passRegexp, \"Ppassword cannot contain spaces\")\n    .min(7, \"Password must be at least 7 characters\")\n    .max(32, \"Password must be at most 32 characters\")\n    .required(\"Password is required\"),\n  confirmPassword: yup.string().label('Confirm password').required().oneOf([yup.ref('password'), null], 'Passwords must match'),\n  name: yup.string()\n    .matches(nameRegexp, \"Name must contain only English letters\")\n    .required(\"Name is required\"),\n  address: yup.string().required(\"Address is required\"),\n  phone: yup.string().phone(\"UA\", true, \"Phone number must be in format '+380XXXXXXXXX'\").required(),\n});   \n\n\nexport const RegisterForm = () => {\n  const [isLastStep, setisLastStep] = useState(false);\n\n  const dispatch = useDispatch();\n  \n  const handleSubmit = (values, {resetForm}) => {\n    dispatch(\n      register({\n        email: values.email,\n        password: values.password,\n        name: values.name,\n        address: values.address,\n        phone: values.phone\n      })\n    );\n    resetForm();   \n  };\n \n  return (\n    <Formik \n      validationSchema={schema}\n      initialValues={initialValues} \n      onSubmit={handleSubmit}\n\n   >\n    {({handleChange, values, errors, touched, setFieldTouched, formikHelpers, setFieldError}) => {\n      const saveAddress = (value) => {\n        values.address = value;\n      }\n\n      const handleClickButton = () => {\n        \n        if ((values.email === '' && values.password === '' && values.confirmPassword === '') && !(touched.email && touched.password && touched.confirm)) {\n          setFieldTouched(\"email\");\n          setFieldTouched(\"password\");\n          setFieldTouched(\"confirm\");\n          return;\n        }\n        \n        if (errors.email || errors.password || errors.confirmPassword) return\n\n        checkEmail(values.email).then((res) => setisLastStep(true)).catch(error => {\n          setFieldError('email', \"The email is already in use\")\n        })\n        \n\n\n      }\n\n\n\n\n     return (<FormStyled autoComplete='off' >\n        {!isLastStep ?  <RegisterFirstStep /> : <RegisterSecondStep saveAddress={saveAddress}/>}\n       \n        <ButtonBox>\n\n            {isLastStep ? (<><Button type=\"submit\">Register</Button>\n            <ButtonBack type=\"button\" onClick={() => setisLastStep(false)}>Back</ButtonBack></>) : <Button type=\"button\" onClick={handleClickButton}>Next</Button>}\n\n        </ButtonBox>\n        <TextStyled>Already have an account? <NavLink to=\"/login\">login</NavLink></TextStyled>\n      </FormStyled>\n      )}}\n   </Formik>)\n};\n\n","import styled from 'styled-components';\n\nimport bgMobImg from '../../imagesAuth/bg-img-auth-mob.png';\nimport bgTabImg from '../../imagesAuth/bg-img-auth-tab.png';\nimport bgWebImg from '../../imagesAuth/bg-img-auth-web.png';\n\nexport const Container = styled.section`\nwidth: 100%;\npadding: 26px 20px 103px 20px;\n// height: calc(100vh - 74px);\nbackground-image: url('${bgMobImg}');\nbackground-repeat: no-repeat;\nbackground-size: contain;\nbackground-position: bottom;\n\n@media screen and (min-width: 320px) {\n      width: 320px;\n\n@media screen and (min-width: 768px) {\n    width: 768px;\n  padding: 128px 80px 223px 80px;\n\n  background-image: url('${bgTabImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n}\n@media screen and (min-width: 1280px) {\n    width: 1280px;\n  padding: 26px 331px 113px 331px;\n  background-image: url('${bgWebImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom 50px;\n}\n`;\n\nexport const TitleStyled = styled.h2`\n    // font-family: 'Manrope';\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.38;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: #111111;\n    margin-bottom: 40px;\n`;","import { AuthContainerStyled } from 'components/AuthContainer/AuthContainer.styled';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Container, TitleStyled } from 'pages/Register/Register.styled';\n\nexport default function Register() {\n  return (\n    <Container>\n    <AuthContainerStyled>\n        <TitleStyled>Registration</TitleStyled>\n        <RegisterForm />\n    </AuthContainerStyled>\n    </Container>\n  );\n}\n"],"names":["AuthContainerStyled","styled","FormStyled","Form","InputContainer","FieldStyled","Field","ListStyled","ItemStyled","CityStyled","RegionStyled","ShowPassword","ErrorMessageStyled","ErrorMessage","ButtonBox","Button","ButtonBack","TextStyled","RegisterFirstStep","validateEmail","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","type","name","placeholder","validate","component","style","position","autoComplete","onClick","size","PlacesAutocomplete","saveAddress","usePlacesAutocomplete","requestOptions","debounce","ready","value","suggestions","status","data","setValue","clearSuggestions","ref","useOnclickOutside","handleSelect","description","onChange","e","target","disabled","map","suggestion","place_id","structured_formatting","main_text","secondary_text","RegisterSecondStep","axios","checkEmail","emailValue","email","initialValues","password","confirmPassword","address","phone","schema","yup","required","matches","min","max","label","oneOf","RegisterForm","isLastStep","setisLastStep","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","register","handleChange","errors","touched","setFieldTouched","setFieldError","formikHelpers","confirm","then","res","catch","error","to","Container","bgMobImg","bgTabImg","bgWebImg","TitleStyled","Register"],"sourceRoot":""}