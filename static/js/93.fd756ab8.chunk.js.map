{"version":3,"file":"static/js/93.fd756ab8.chunk.js","mappings":"wPAEaA,EAAiBC,EAAAA,GAAAA,IAAH,qEAKdC,EAAeD,EAAAA,GAAAA,GAAH,qOCLZE,EAAoB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,QAAnB,ECAzBC,EAAkBL,EAAAA,GAAAA,GAAH,2WAqBfM,EAAiBN,EAAAA,GAAAA,EAAH,0cAyBdO,EAAmBP,EAAAA,GAAAA,IAAH,uOAchBQ,EAAqBR,EAAAA,GAAAA,IAAH,sNAalBS,EAAkBT,EAAAA,GAAAA,GAAH,ia,SCb5B,EAtDuB,SAAC,GAAc,IAAbU,EAAY,EAAZA,OACbC,EAA0DD,EAA1DC,MAAOC,EAAmDF,EAAnDE,IAAKC,EAA8CH,EAA9CG,QAASC,EAAqCJ,EAArCI,SAAUC,EAA2BL,EAA3BK,SAAUC,EAAiBN,EAAjBM,MAAOC,EAAUP,EAAVO,MAExD,OACI,UAACZ,EAAD,YACA,SAACC,EAAD,CAAgBY,KAAMN,EAAKO,OAAO,SAASC,IAAI,aAA/C,SACKT,KAGL,UAACJ,EAAD,WACKO,GACD,SAACN,EAAD,CAAoBa,IAAKP,EAAUQ,IAAKX,KAExC,uCAGA,UAACF,EAAD,YACA,2BACI,gCACCM,EAAQ,UAAOA,EAASQ,KAAhB,cAA0BR,EAASS,KACxC,0CAaR,2BACI,oCACCX,MAGL,2BACI,kCACCI,MAGL,2BACI,kCACCD,aAOhB,EC1DYS,EAAmBzB,EAAAA,GAAAA,GAAH,gZCmB7B,EAhBuB,WAEnB,IAAM0B,GAAUC,EAAAA,EAAAA,IAAYzB,GAI5B,OACI,SAACuB,EAAD,UACKC,GACDA,EAAQE,KAAI,SAAAlB,GACR,OAAO,SAAC,EAAD,CAAiCA,OAAQA,GAApBA,EAAOmB,IACtC,KAGZ,ECOD,EAlBmB,WACjB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,KACV,GAAE,CAACH,KAGF,UAAC/B,EAAD,YACE,SAACE,EAAD,2BAEA,SAAC,EAAD,MAGL,C","sources":["pages/OurFriends/OurFriend.styled.jsx","redux/services/selectors.js","components/OurFriendsItem/OurFriendsItem.styled.jsx","components/OurFriendsItem/OurFriendsItem.jsx","components/OurFriendsList/OurFriendsList.styled.jsx","components/OurFriendsList/OurFriendsList.jsx","pages/OurFriends/OurFriends.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ServiceWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ServiceTitle = styled.h1`\n  margin: 42px auto 28px;\n  font-family: 'Manrope';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 66px;\n  @media (min-width: 768px) {\n    margin: 70px auto 40px;\n  }\n`;","export const isLoadingServices = state => state.services.isLoadingServices;\n\nexport const selectAllServices = state => state.services.services;\n","import styled from \"styled-components\";\n\nexport const FriendsStyledLi = styled.li`\n  width: 280px;\n  padding: 14px 4px 12px;\n  list-style: none;\n\n  background-color: #FFFFFF;\n  border-radius: 40px;\n  box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n  transition: scale 250ms linear;\n\n  :hover {\n    scale: 1.03;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100%;\n\n    border-radius: 20px;\n  }\n`;\n\nexport const FriendsStyledA = styled.a`\n  display: block;\n  text-align: center;\n  flex-grow: 1;\n  width: 100%;\n  margin-bottom: 12px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.33;\n  text-decoration: underline;\n  color: #F59256;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 16px;\n\n    font-size: 16px;\n    line-height: 1.375;\n  }\n  @media screen and (min-width: 1280px) {\n    font-size: 16px;\n    line-height: 1.35;\n  } ;\n`;\n\nexport const FriendsStyledDiv = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 12px;\n  align-items: flex-start;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 16px;\n  } ;\n`;\n\nexport const FriendsStyledImage = styled.img`\n  display: block;\n  width: 110px;\n  height: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 120px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 158px;\n  } ;\n`;\n\nexport const FriendsStyledUL = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  list-style: none;\n  font-family: 'Manrope';\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n\n  @media screen and (min-width: 768px) {\n    gap: 8px;\n    font-size: 14px;\n    line-height: 1.357;\n  }\n  @media screen and (min-width: 1280px) {\n    gap: 12px;\n    font-size: 16px;\n    line-height: 1.375;\n  } ;\n`;\n\n// export const FriendsStyledInfoTime = styled.li`\n//   cursor: ${(props) => (props.shouldHighlight ? \"pointer\" : \"inherit\")};\n//   :hover {\n//     color: ${(props) =>\n//       props.shouldHighlight ? props.theme.colors.accent : \"inherit\"};\n//   }\n// `;\n\n// export const FriendsInfoItemLink = styled.a`\n//   color: ${(p) => p.theme.colors.text.primary};\n\n//   :hover {\n//     color: ${(p) => p.theme.colors.accent};\n//   }\n// `;\n","import { \n    FriendsStyledLi,\n    FriendsStyledA, \n    FriendsStyledDiv, \n    FriendsStyledImage, \n    FriendsStyledUL,\n} from \"./OurFriendsItem.styled\";\n\nconst OurFriendsItem = ({friend}) => {\n    const { title, url, address, imageUrl, workDays, phone, email } = friend;\n\n    return (\n        <FriendsStyledLi>\n        <FriendsStyledA href={url} target=\"_blank\" rel=\"noreferrer\">\n            {title}\n        </FriendsStyledA>\n\n        <FriendsStyledDiv>\n            {imageUrl ? (\n            <FriendsStyledImage src={imageUrl} alt={title} />\n            ) : (\n            <div>no image</div>\n            )}\n\n            <FriendsStyledUL>\n            <li>\n                <p>Time</p>\n                {workDays ? (`${workDays.from} - ${workDays.to}`) : (\n                    <div>--------</div>\n                )}\n                {/* <OurFriendsTimeList\n                workDays={workDays}\n                dayOfTheWeek={DAY_OF_THE_WEEK}\n                >\n                <Box>\n                    <Typography>Time:</Typography>\n                    {checkField(\"time\", workDays)}\n                </Box>\n                </OurFriendsTimeList> */}\n            </li>\n\n            <li>\n                <p>Address:</p>\n                {address}\n            </li>\n\n            <li>\n                <p>Email:</p>\n                {email}\n            </li>\n\n            <li>\n                <p>Phone:</p>\n                {phone}\n            </li>\n            </FriendsStyledUL>\n        </FriendsStyledDiv>\n        </FriendsStyledLi>\n        );\n\n};\n\nexport default OurFriendsItem;","import styled from \"styled-components\";\n\nexport const OurFriendsListUl = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 1fr;\n  grid-gap: 12px;\n  justify-items: center;\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(2, 1fr);\n    grid-gap: 32px;\n  }\n  @media screen and (min-width: 1280px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { selectAllServices } from 'redux/services/selectors';\nimport OurFriendsItem from 'components/OurFriendsItem/OurFriendsItem';\nimport { OurFriendsListUl } from './OurFriendsList.styled';\n\nconst OurFriendsList = () => {\n\n    const friends = useSelector(selectAllServices);\n\n    // console.log(friends);\n\n    return (\n        <OurFriendsListUl>\n            {friends &&\n            friends.map(friend => {\n                return <OurFriendsItem key={friend._id} friend={friend}/>\n            })}\n        </OurFriendsListUl>\n    )\n};\n\nexport default OurFriendsList;","// import NewsList from 'components/NewsList/NewsList';\nimport { useEffect } from 'react';\n// import { Helmet } from 'react-helmet';\nimport { useDispatch } from 'react-redux';\nimport { getServices } from 'redux/services/operations';\nimport { ServiceTitle, ServiceWrapper } from './OurFriend.styled';\nimport OurFriendsList from 'components/OurFriendsList/OurFriendsList';\n\nconst OurFriends = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getServices());\n  }, [dispatch]);\n\n  return (\n    <ServiceWrapper>\n      <ServiceTitle>Our Friends</ServiceTitle>\n\n      <OurFriendsList />\n    </ServiceWrapper>\n  );\n};\n\n\n\nexport default OurFriends;\n"],"names":["ServiceWrapper","styled","ServiceTitle","selectAllServices","state","services","FriendsStyledLi","FriendsStyledA","FriendsStyledDiv","FriendsStyledImage","FriendsStyledUL","friend","title","url","address","imageUrl","workDays","phone","email","href","target","rel","src","alt","from","to","OurFriendsListUl","friends","useSelector","map","_id","dispatch","useDispatch","useEffect","getServices"],"sourceRoot":""}