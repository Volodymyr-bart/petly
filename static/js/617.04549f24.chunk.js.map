{"version":3,"file":"static/js/617.04549f24.chunk.js","mappings":"sLAEaA,E,QAAsBC,GAAAA,IAAH,sW,mJCCnBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mLAYVG,EAAiBH,EAAAA,GAAAA,IAAH,2GAOdI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sTAiBXM,GAAqBN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,2FAMlBQ,EAASR,EAAAA,GAAAA,OAAH,mPAcNS,EAAaT,EAAAA,GAAAA,EAAH,uI,mBClDjBU,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,OAAW,CACxBH,MAAOG,EAAAA,SAAaH,MAAM,wBAAwBI,SAAS,yBAC3DH,SAAUE,EAAAA,SACPE,QAVc,QAUM,sCACpBC,IAAI,GACJC,IAAI,IACJH,SAAS,8BAIDI,EAAY,WAEvB,IAAMC,GAAWC,EAAAA,EAAAA,MAcjB,OACE,SAAC,KAAD,CAAQX,cAAeA,EAAeY,SAbnB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAE7BJ,GACEK,EAAAA,EAAAA,IAAM,CACJd,MAAOY,EAAOZ,MACdC,SAAUW,EAAOX,YAErBY,GACD,EAK+DE,iBAAkBb,EAAhF,SACG,YAA8D,EAA5Dc,aAA4D,EAA9CJ,OAA8C,EAAtCK,OAAsC,EAA9BC,QAA8B,EAArBC,gBACtC,OAAO,UAAC7B,EAAD,CAAa8B,aAAa,MAA1B,WACL,UAAC5B,EAAD,YACE,SAACC,EAAD,CAAa4B,KAAK,QAAQC,KAAK,QAAQC,YAAY,WACnD,SAAC5B,EAAD,CAAoB2B,KAAK,QAAQE,UAAU,UAC3C,SAAC/B,EAAD,CAAa4B,KAAK,WAAWC,KAAK,WAAWC,YAAY,cACzD,SAAE5B,EAAF,CAAqB2B,KAAK,WAAWE,UAAU,aAEjD,SAAC3B,EAAD,CAAQwB,KAAK,SAAb,qBACA,UAACvB,EAAD,sCAAmC,SAAC,KAAD,CAAS2B,GAAG,YAAZ,2BAExC,GAGN,E,wCClDYC,EAAYrC,EAAAA,GAAAA,QAAH,uuBAIGsC,EAYEC,EAQAC,GAOdC,EAAczC,EAAAA,GAAAA,GAAH,kOCjCT,SAAS0C,IACtB,OACE,SAACL,EAAD,WACE,UAAC,IAAD,YACE,SAACI,EAAD,qBACA,SAACtB,EAAD,QAIP,C","sources":["components/AuthContainer/AuthContainer.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainerStyled = styled.div`\n   margin: 0;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    left: 80px;\n    top: 276px;\n    background: #FFFFFF;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding; 60px 80px;;\n    \n  }\n`;","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        \n        }\n\n        @media screen and (min-width: 1280px) {\n      \n        }\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-bottom: 40px;\n`;\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    padding: 11px 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    background: #FDF7F2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n        :hover,\n        :focus {\n        cursor: pointer;\n        }\n    \n\n        \n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    font-size: 18px;\n    color: #9d3158;\n    margin-top: -10px;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 40px;\nwidth: 100%;\npadding: 10px 28px;\nbackground: #F59256;\nborder-radius: 40px;\nborder: none;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #FFFFFF;\n`;\n\nexport const TextStyled = styled.p`\ntext-align: center;\nletter-spacing: 0.04em;\n> a {\n  text-decoration-line: underline;\n  color: #3091eb;\n}\n`;\n\n","import { useDispatch } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport { Button, FormStyled, FieldStyled,  ErrorMessageStyled, TextStyled, InputContainer} from './LoginForm.styled';\nimport * as yup from 'yup';\n\nconst passRegexp = /^\\S+$/;\n\nconst initialValues = {\n  email: '',\n  password: ''\n}\n\nconst schema = yup.object({\n  email: yup.string().email(\"Invalid email addres\").required(\"The email is required\"),\n  password: yup.string()\n    .matches(passRegexp, \"The password cannot contain spaces\")\n    .min(7)\n    .max(32)\n    .required(\"The password is required\"),\n});   \n\n\nexport const LoginForm = () => {\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, {resetForm}) => {\n\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      }));\n    resetForm();   \n  };\n\n\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n      {({handleChange, values, errors, touched, setFieldTouched}) => {\n          return <FormStyled  autoComplete='off'>\n            <InputContainer>\n              <FieldStyled type=\"email\" name=\"email\" placeholder='Email'/>\n              <ErrorMessageStyled name=\"email\" component=\"span\"/>\n              <FieldStyled type=\"password\" name=\"password\" placeholder='Password'/>\n              < ErrorMessageStyled name=\"password\" component=\"span\"/>\n              </InputContainer>\n            <Button type=\"submit\">Log in</Button>\n            <TextStyled>Don't have an account? <NavLink to=\"/register\">Register</NavLink></TextStyled>\n          </FormStyled>\n      }}\n        </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nimport bgMobImg from '../../imagesAuth/bg-img-auth-mob.png';\nimport bgTabImg from '../../imagesAuth/bg-img-auth-tab.png';\nimport bgWebImg from '../../imagesAuth/bg-img-auth-web.png';\n\nexport const Container = styled.section`\nwidth: 100%;\npadding: 44px 20px 159px 20px;\n// height: calc(100vh - 74px);\nbackground-image: url('${bgMobImg}');\nbackground-repeat: no-repeat;\nbackground-size: contain;\nbackground-position: bottom;\n\n@media screen and (min-width: 320px) {\n      width: 320px;\n\n@media screen and (min-width: 768px) {\n    width: 768px;\n  padding: 180px 80px 300px 80px;\n\n  background-image: url('${bgTabImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n}\n@media screen and (min-width: 1280px) {\n    width: 1280px;\n  padding: 70px 331px 147px 331px;\n  background-image: url('${bgWebImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom 50px;\n}\n`;\n\nexport const TitleStyled = styled.h2`\n    // font-family: 'Manrope';\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.38;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: #111111;\n    margin-bottom: 40px;\n`;","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { AuthContainerStyled } from 'components/AuthContainer/AuthContainer.styled';\nimport { TitleStyled, Container } from './Login.styled';\n\nexport default function Login() {\n  return (\n    <Container>\n      <AuthContainerStyled>\n        <TitleStyled>Login</TitleStyled>\n        <LoginForm />\n      </AuthContainerStyled>\n    </Container>\n  );\n}\n"],"names":["AuthContainerStyled","styled","FormStyled","Form","InputContainer","FieldStyled","Field","ErrorMessageStyled","ErrorMessage","Button","TextStyled","initialValues","email","password","schema","yup","required","matches","min","max","LoginForm","dispatch","useDispatch","onSubmit","values","resetForm","logIn","validationSchema","handleChange","errors","touched","setFieldTouched","autoComplete","type","name","placeholder","component","to","Container","bgMobImg","bgTabImg","bgWebImg","TitleStyled","Login"],"sourceRoot":""}