{"version":3,"file":"static/js/96.311aba76.chunk.js","mappings":"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","sources":["components/Search/Search.styled.jsx","components/Search/Search.jsx","pages/Notices/Notices.styled.jsx","components/ModalAddNotice/ModalAddNotice.styled.jsx","components/ModalAddNotice/ModalAddNoticeValidation.jsx","components/ModalAddNotice/ModalAddNoticeAddMyPetFirstStep.jsx","components/ModalAddNotice/ModalAddNoticeAddMyPetSecondStep.jsx","components/ModalAddNotice/ModalAddNoticeFirstStep.jsx","components/ModalAddNotice/UploadImage/UploadImage.styled.jsx","components/ModalAddNotice/UploadImage/UploadImage.jsx","components/ModalAddNotice/ModalAddNoticeSecondStep.jsx","components/ModalAddNotice/ModalAddNotice.jsx","components/NoticesCategoryNav/NoticesCategoryNav.styled.jsx","components/NoticesCategoryNav/NoticesCategoryNav.jsx","pages/Notices/Notices.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchStyled = styled.div`\n    position: relative;\n\n    input {\n        width: 280px;\n        height: 40px;\n        margin-bottom: 28px;\n        padding: 10px 42px 10px 12px;\n        box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n        border-radius: 20px;\n        border: none;\n        \n        font-weight: 500;\n        font-size: 16px;\n        line-height: 1,4;\n        letter-spacing: 0.04em;\n        color: #535353;\n    }\n\n    button {\n        position: absolute;\n        top: 6px;\n        right: 12px;\n\n        height: 28px;\n        padding: 0;\n        \n        background-color: #ffffff;\n        border: none;\n\n        cursor: pointer;\n    }\n\n    @media (min-width: 768px) {\n        text-align: center;\n\n        input {\n            width: 608px;\n            height: 44px;\n            \n            margin-bottom: 40px;\n            padding: 8px 48px 8px 20px;            \n            border-radius: 40px;\n            \n            \n            font-weight: 500;\n            font-size: 20px;\n        }\n        \n        button {           \n            top: 8px;\n            right: 60px;\n        }\n    }\n\n    @media (min-width: 1280px) {        \n        button {             \n            right: 330px;\n        }\n    }\n`;","\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { AiOutlineSearch, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { SearchStyled } from \"./Search.styled\";\n\nconst Search = ({ getValueMethod }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    getValueMethod(inputValue);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputValue])\n\n\n  return (\n    <SearchStyled>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n\n      <button\n        type=\"button\"\n        onClick={() => setInputValue('')}\n      >\n        {inputValue ? <AiOutlineCloseCircle size={28} color={'#111111'} /> : <AiOutlineSearch size={24} color={'#111111'} />}\n      </button>\n      \n    </SearchStyled>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\n\nexport const NoticesStyled = styled.div`    \n    padding-top: 40px;\n    padding-bottom: 68px;\n\n    h1 {\n        margin-bottom: 28px;\n        font-size: 24px;\n        line-height: 1.4;\n        text-align: center;\n        color: #111111;\n    }\n\n    @media (min-width: 768px) {\n        h1 {\n            margin-bottom: 40px;\n            font-size: 48px;\n        }               \n    }\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 40px 80px;\n  width: 608px;\n`;\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n`;\n\nexport const TitleModal = styled.h1`\n  margin: 0 auto;\n  font-weight: 600;\n  font-size: 36px;\n  line-height: 1.36;\n  color: #000000;\n`;\n\nexport const Description = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 27px;\n  text-align: center;\n  letter-spacing: -0.01em;\n  color: #000000;\n`;\n\nexport const RadioBtnBox = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  gap: 10px;\n  list-style: none;\n`;\n\nexport const RadioItems = styled.li`\n  margin: 0;\n`\n\nexport const RadioInput = styled(Field)`\n  display: none;\n  &hidden {\n    opacity: 0;\n    height: 0;\n    width:0;\n    line-height: 0;\n    overflow: hidden;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nexport const ContainerInputs = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 28px;\n  gap: 28px;\n`;\n\nexport const RadioBtnCategory = styled.label`\n  display: block;\n  border: 2px solid #f59256;\n  border-radius: 40px;\n  padding: 10px 28px;\n\n\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n\n  color: #000000;\n\n  &.active {\n    background-color: #f59256;\n    color: #FFFFFF;\n  }\n`;\n\nexport const FieldStyled = styled(Field)`\n  width: 448px;\n  height: 48px;\n  padding: 11px 45px 11px 14px;\n  font-size: 16px;\n  line-height: 1.6;\n  letter-spacing: 0.04em;\n  background: #fdf7f2;\n  color: rgba(17, 17, 17, 0.6);\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: 2px solid #f59256;\n  }\n`;\nexport const LabelField = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\nexport const LabelFieldMyPetPhoto = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  align-items: center;\n`;\nexport const LabelFieldMyPetComment = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  align-items: center;\n`;\nexport const LabelFieldTitle = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.08;\n  color: #000000;\n  span {\n    color: #f59256;\n  }\n`;\nexport const ErrorText = styled.div`\n  display: block;\n  margin-top: 10px;\n  color: red;\n`;\nexport const ContainerButton = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 10px 28px;\n  background: #f59256;\n  border-radius: 40px;\n  border: none;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #ffffff;\n`;\n\nexport const CancelBack = styled.button`\n  width: 100%;\n  padding: 10px 28px;\n  background: #ffffff;\n  border-radius: 40px;\n  border: 2px solid #f59256;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n  color: #000000;\n`;\n\n// Step 2\n\nexport const ContainerSex = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  gap: 28px;\n`;\nexport const TitleInput = styled.div`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.08;\n  color: #000000;\n  span {\n    color: #f59256;\n  }\n`;\nexport const TitleInputMyPet = styled.div`\n  text-align: center;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.08;\n  color: #000000;\n  span {\n    color: #f59256;\n  }\n`;\nexport const ContainerSexVariant = styled.div`\n  display: flex;\n  gap: 95px;\n`;\nexport const Icon = styled.div`\n  display: block;\n  width: 60px;\n  height: 60px;\n`;\nexport const Sex = styled.span`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 26px;\n  :hover {\n    color: #f59256;\n  }\n`;\n","import * as yup from 'yup';\n\nconst locationRegexp = /[A-Z][a-z]*,\\s[A-Z][a-z]*/;\nconst titleRegexp = /^[a-zA-Z\\s]*$/;\n\nexport const validationFistStep = yup.object().shape({\n  title: yup\n    .string()\n    .trim(true)\n    .min(2, 'Too short!')\n    .max(48, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces')\n    .required('Title is required'),\n  name: yup\n    .string()\n    .trim(true)\n    .min(2, 'Too short!')\n    .max(16, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces'),\n    // .required('Name is required'),\n  breed: yup\n    .string()\n    .trim()\n    .min(2, 'Too short!')\n    .max(24, 'Too long!')\n    .matches(titleRegexp, 'Must contain only letters and spaces')\n    .required('Breed is required'),\n  //   birthday: yup.date().nullable(),\n});\n\nconst FILE_SIZE = 5242880;\nconst SUPPORTED_FORMATS = ['image/jpg', 'image/jpeg', 'image/png'];\n\nexport const validationSecondStep = yup.object().shape({\n  location: yup\n    .string()\n    .trim()\n    .matches(locationRegexp, 'For example, \"Brovary, Kyiv\" or \"Dubno, Rivne\"')\n    .required('Location is required'),\n  comments: yup\n    .string()\n    .min(8, 'Too short!')\n    .max(120, 'Too long!')\n    .required('Comments is required'),\n  price: yup.number().min(1, 'Price has to be more than 0'),\n  theSex: yup.string().required('Choose sex'),\n  petAvatar: yup\n    .mixed()\n    .test(\n      'FILE_SIZE',\n      'Uploaded file is too big',\n      value => !value || (value && value.size <= FILE_SIZE)\n    )\n    .test(\n      'FILE_FORMAT',\n      'Uploaded file unsupported format',\n      value => !value || (value && SUPPORTED_FORMATS.includes(value?.type))\n    ),\n});\n","import { Formik } from 'formik';\nimport {\n  Button,\n  CancelBack,\n  Container,\n  ContainerButton,\n  ErrorText,\n  FieldStyled,\n  FormContainer,\n  LabelField,\n  LabelFieldTitle,\n  TitleModal,\n} from './ModalAddNotice.styled';\nimport { validationFistStep } from './ModalAddNoticeValidation';\n\n// const categories = [\n//   { name: 'lost', value: 'lost', id: '1' },\n//   { name: 'found', value: 'found', id: '2' },\n//   { name: 'In good hands', value: 'for-free', id: '3' },\n//   { name: 'sell', value: 'sell', id: '4' },\n// ];\n\nexport const ModalAddNoticeAddMyPetFirstStep = ({\n  onClose,\n  setStepIndex,\n  setFormData,\n  formData,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        name: '',\n        birthday: '',\n        breed: '',\n        category: '',\n      }}\n      validationSchema={validationFistStep}\n      onSubmit={values => {\n        const data = { ...formData, ...values };\n        setFormData(data);\n        setStepIndex(1);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        // setFieldValue,\n        handleBlur,\n        isValid,\n        dirty,\n      }) => (\n        <FormContainer onSubmit={handleSubmit}>\n          <TitleModal>Add pet</TitleModal>\n          <Container>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Name pet</LabelFieldTitle>\n                <FieldStyled\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Type name pet\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n              <ErrorText>{errors.name}</ErrorText>\n            </div>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Date of birth</LabelFieldTitle>\n                <FieldStyled\n                  name=\"date\"\n                  type=\"text\"\n                  placeholder=\"Type date of birth\"\n                  value={values.birthday}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n            </div>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Breed</LabelFieldTitle>\n                <FieldStyled\n                  name=\"breed\"\n                  type=\"text\"\n                  placeholder=\"Type breed\"\n                  value={values.breed}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n              <ErrorText>{errors.breed && touched.breed}</ErrorText>\n            </div>\n          </Container>\n          <ContainerButton>\n            <CancelBack type=\"button\" onClick={onClose}>\n              Cancel\n            </CancelBack>\n            {dirty && isValid ? (\n              <Button className=\"activeNext\" type=\"submit\">\n                Next\n              </Button>\n            ) : (\n              <Button className=\"inactiveNext\" disabled={true}>\n                Next\n              </Button>\n            )}\n          </ContainerButton>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import { Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addNotice } from 'redux/notices/operations';\nimport {\n  Button,\n  CancelBack,\n  Container,\n  ContainerButton,\n  FormContainer,\n  LabelFieldMyPetComment,\n  LabelFieldMyPetPhoto,\n  TitleInput,\n  TitleInputMyPet,\n  TitleModal,\n} from './ModalAddNotice.styled';\nimport { validationSecondStep } from './ModalAddNoticeValidation';\n\nexport const ModalAddNoticeAddMySecondStep = ({\n  setStepIndex,\n  formData,\n  onClose,\n}) => {\n  const dispatch = useDispatch();\n\n  const submitAddNoticeForm = data => {\n    console.log(data);\n    dispatch(\n      addNotice(\n        { data }\n        // {\n        // title: values.title,\n        // name: values.name,\n        // birthday: values.birthday,\n        // breed: values.breed,\n        // sex: values.sex,\n        // location: values.location,\n        // price: values.price,\n        // image: values.image,\n        // comments:values.comments,\n        // }\n      )\n    );\n  };\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          sex: '',\n          location: '',\n          price: '',\n          image: null,\n          comments: '',\n        }}\n        validationSchema={validationSecondStep}\n        onSubmit={values => {\n          const data = { ...formData, ...values };\n          submitAddNoticeForm(data);\n\n          // console.log(values);\n        }}\n      >\n        {({\n          values,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue,\n          isValid,\n          dirty,\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <TitleModal>Add pet</TitleModal>\n            <Container>\n              {/* Load file */}\n              <div>\n                <LabelFieldMyPetPhoto>\n                  <TitleInputMyPet>\n                    Add photo and some comments:\n                  </TitleInputMyPet>\n                  <input\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={event => {\n                      setFieldValue('upload', event.currentTarget.files);\n                    }}\n                  />\n                </LabelFieldMyPetPhoto>\n                <div>{errors.image}</div>\n              </div>\n\n              {/* Comment */}\n              <div>\n                <LabelFieldMyPetComment>\n                  <TitleInput>Comments</TitleInput>\n                  <textarea\n                    type=\"text\"\n                    name=\"comments\"\n                    placeholder=\"Type comment\"\n                    defaultValue={values.comments}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </LabelFieldMyPetComment>\n                {/* <div>{errors.comments}</div> */}\n              </div>\n            </Container>\n            <ContainerButton>\n              <CancelBack\n                type=\"button\"\n                onClick={() => {\n                  setStepIndex(0);\n                }}\n              >\n                Back\n              </CancelBack>\n              {dirty && isValid ? (\n                <Button className=\"activeDone\" type=\"submit\">\n                  Done\n                </Button>\n              ) : (\n                <Button className=\"inactiveDone\" disabled={true}>\n                  Done\n                </Button>\n              )}\n            </ContainerButton>\n          </FormContainer>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import { Formik } from 'formik';\nimport {\n  Button,\n  CancelBack,\n  Container,\n  ContainerButton,\n  Description,\n  ErrorText,\n  FieldStyled,\n  FormContainer,\n  LabelField,\n  LabelFieldTitle,\n  RadioBtnBox,\n  RadioBtnCategory,\n  RadioInput,\n  TitleModal,\n} from './ModalAddNotice.styled';\nimport { validationFistStep } from './ModalAddNoticeValidation';\n\nconst categories = [\n  { name: 'lost/found', value: 'lost/found', id: '1' },\n  { name: 'In good hands', value: 'for-free', id: '2' },\n  { name: 'sell', value: 'sell', id: '3' },\n];\n\nexport const ModalAddNoticeFistStep = ({\n  onClose,\n  setStepIndex,\n  setFormData,\n  formData,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        name: '',\n        birthday: '',\n        breed: '',\n        category: '',\n      }}\n      validationSchema={validationFistStep}\n      onSubmit={values => {\n        const data = { ...formData, ...values };\n        setFormData(data);\n        setStepIndex(1);\n      }}\n    >\n      {({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleSubmit,\n        // setFieldValue,\n        handleBlur,\n        isValid,\n        dirty,\n      }) => (\n        <FormContainer onSubmit={handleSubmit}>\n          <TitleModal>Add pet</TitleModal>\n          <Container>\n            <Description>\n              Lorem ipsum dolor sit amet, consectetur Lorem ipsum dolor sit\n              amet, consectetur\n            </Description>\n            <RadioBtnBox>\n              {categories.map(category => (\n                <li key={category.id}>\n                  <RadioBtnCategory\n                    className={\n                      values.category === category.value ? 'active' : ''\n                    }\n                  >\n                    {category.name}\n                    <RadioInput\n                      type=\"radio\"\n                      name=\"category\"\n                      value={category.value}\n                    />\n                  </RadioBtnCategory>\n                </li>\n              ))}\n              {/* <div>{errors.category}</div> */}\n            </RadioBtnBox>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>\n                  Tittle of ad <span>*</span>\n                </LabelFieldTitle>\n                <FieldStyled\n                  name=\"title\"\n                  type=\"text\"\n                  placeholder=\"Type name\"\n                  value={values.title}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n              <ErrorText>{errors.title}</ErrorText>\n            </div>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Name pet</LabelFieldTitle>\n                <FieldStyled\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Type name pet\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n              <ErrorText>{errors.name}</ErrorText>\n            </div>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Date of birth</LabelFieldTitle>\n                <FieldStyled\n                  name=\"birthday\"\n                  type=\"text\"\n                  placeholder=\"Type date of birth XX.XX.XXXX\"\n                  value={values.birthday}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n            </div>\n            <div>\n              <LabelField>\n                <LabelFieldTitle>Breed</LabelFieldTitle>\n                <FieldStyled\n                  name=\"breed\"\n                  type=\"text\"\n                  placeholder=\"Type breed\"\n                  value={values.breed}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                />\n              </LabelField>\n              <ErrorText>{errors.breed && touched.breed}</ErrorText>\n            </div>\n          </Container>\n          <ContainerButton>\n            <CancelBack type=\"button\" onClick={onClose}>\n              Cancel\n            </CancelBack>\n            {dirty && isValid ? (\n              <Button className=\"activeNext\" type=\"submit\">\n                Next\n              </Button>\n            ) : (\n              <Button className=\"inactiveNext\" disabled={true}>\n                Next\n              </Button>\n            )}\n          </ContainerButton>\n        </FormContainer>\n      )}\n    </Formik>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ImgBox = styled.div`\n  width: 116px;\n  height: 116px;\n`;\n\nexport const Img = styled.img`\n  width: 116px;\n  height: 116px;\n  object-fit: cover;\n  border-radius: 20px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { Img, ImgBox } from './UploadImage.styled';\n\nexport const UploadImage = ({ image }) => {\n  const [imagePreview, setImagePreview] = useState();\n\n  const reader = new FileReader();\n  reader.readAsDataURL(image);\n  reader.onload = () => {\n    setTimeout(() => {\n      setImagePreview(reader.result);\n    }, 1000);\n  };\n\n  return (\n    <>\n      <ImgBox>\n        <Img src={imagePreview} />\n      </ImgBox>\n    </>\n  );\n};","import { Field, Formik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { addNotice } from 'redux/notices/operations';\nimport {\n  Button,\n  CancelBack,\n  Container,\n  ContainerButton,\n  ContainerSex,\n  ContainerSexVariant,\n  FormContainer,\n  Icon,\n  LabelField,\n  Sex,\n  TitleInput,\n  TitleModal,\n} from './ModalAddNotice.styled';\nimport { validationSecondStep } from './ModalAddNoticeValidation';\nimport { UploadImage } from './UploadImage/UploadImage';\n\nexport const ModalAddNoticeSecondStep = ({\n  setStepIndex,\n  formData,\n  onClose,\n}) => {\n\n    const dispatch = useDispatch();\n\n    \n    \n    const submitAddNoticeForm = async (data) => {\n         dispatch(\n            addNotice(\n                data\n                // {\n                // title: values.title,\n                // name: values.name,\n                // birthday: values.birthday,\n                // breed: values.breed,\n                // sex: values.sex,\n                // location: values.location,\n                // price: values.price,\n                // image: values.image,\n                // comments:values.comments,\n                // }\n            )\n        );\n    }\n    return (\n        <div>\n            <Formik\n                initialValues={{\n                theSex: '',\n                location: '',\n                price: '1',\n                petAvatar: null,\n                comments: '',\n                }}\n                validationSchema={validationSecondStep}\n                onSubmit={values => {\n                const data = { ...formData, ...values };\n                submitAddNoticeForm(data);\n        }}\n      >\n        {({\n          values,\n          errors,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          setFieldValue,\n          isValid,\n          dirty,\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <TitleModal>Add pet</TitleModal>\n            <ContainerSex>\n              <TitleInput>\n                The sex<span>*</span>:\n              </TitleInput>\n              <ContainerSexVariant>\n                <label className={values.sex === 'male' ? 'active' : ''}>\n                  <Field type=\"radio\" name=\"sex\" value=\"male\" />\n                  <Icon>icon</Icon>\n                  <Sex>Male</Sex>\n                </label>\n                <label className={values.sex === 'female' ? 'active' : ''}>\n                  <Field type=\"radio\" name=\"sex\" value=\"female\" />\n                  <Icon>icon</Icon>\n                  <Sex>Female</Sex>\n                </label>\n              </ContainerSexVariant>\n              {/* <div>{errors.sex}</div> */}\n            </ContainerSex>\n            <Container>\n              <div>\n                <LabelField>\n                  <TitleInput>\n                    Location<span>*</span>:\n                  </TitleInput>\n                  <Field\n                    name=\"location\"\n                    type=\"text\"\n                    placeholder=\"City, Region\"\n                    value={values.location}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </LabelField>\n                <div>{errors.location}</div>\n              </div>\n              {formData.category === 'sell' && (\n                <div>\n                  <LabelField>\n                    <TitleInput>\n                      Price<span>*</span>:\n                    </TitleInput>\n                    <Field\n                      name=\"price\"\n                      type=\"text\"\n                      value={values.price}\n                      placeholder=\"Type price\"\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                    />\n                  </LabelField>\n                  <div>{errors.price}</div>\n                </div>\n              )}\n              {/* Load file */}\n\n              <div>\n                <LabelField>\n                  <TitleInput>Load the pet’s image:</TitleInput>\n                  <input\n                    type=\"file\"\n                    name=\"petAvatar\"\n                    onChange={event => {\n                      setFieldValue('petAvatar', event.currentTarget.files[0]);\n                    }}\n                  />\n                  <div>\n                    {values.petAvatar && <UploadImage image={values.petAvatar} />}\n                  </div>\n                </LabelField>\n                <div>{errors.petAvatar}</div>\n              </div>\n\n              {/* Comment */}\n              <div>\n                <LabelField>\n                  <TitleInput>Comments</TitleInput>\n                  <textarea\n                    type=\"text\"\n                    name=\"comments\"\n                    placeholder=\"Type comment\"\n                    defaultValue={values.comments}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                  />\n                </LabelField>\n                <div>{errors.comments}</div>\n              </div>\n            </Container>\n            <ContainerButton>\n              <CancelBack\n                type=\"button\"\n                onClick={() => {\n                  setStepIndex(0);\n                }}\n              >\n                Back\n              </CancelBack>\n              {dirty && isValid ? (\n                <Button className=\"activeDone\" type=\"submit\">\n                  Done\n                </Button>\n              ) : (\n                <Button className=\"inactiveDone\" disabled={true}>\n                  Done\n                </Button>\n              )}\n            </ContainerButton>\n          </FormContainer>\n        )}\n      </Formik>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { ModalAddNoticeAddMyPetFirstStep } from './ModalAddNoticeAddMyPetFirstStep';\nimport { ModalAddNoticeAddMySecondStep } from './ModalAddNoticeAddMyPetSecondStep';\nimport { ModalAddNoticeFistStep } from './ModalAddNoticeFirstStep';\nimport { ModalAddNoticeSecondStep } from './ModalAddNoticeSecondStep';\n// import { useDispatch } from \"react-redux\";\n\nexport const ModalAddNotice = ({ onClose }) => {\n  const [activeStepIndex, setActiveStepIndex] = useState(4);\n  const [formData, setFormData] = useState({});\n\n  return (\n    <div>\n      {activeStepIndex === 0 && (\n        <ModalAddNoticeFistStep\n          onClose={onClose}\n          setStepIndex={setActiveStepIndex}\n          formData={formData}\n          setFormData={setFormData}\n        />\n      )}\n      {activeStepIndex === 1 && (\n        <ModalAddNoticeSecondStep\n          setStepIndex={setActiveStepIndex}\n          formData={formData}\n          onClose={onClose}\n        />\n      )}\n      {activeStepIndex === 3 && (\n        <ModalAddNoticeAddMyPetFirstStep\n          setStepIndex={setActiveStepIndex}\n          formData={formData}\n          onClose={onClose}\n        />\n      )}\n      {activeStepIndex === 4 && (\n        <ModalAddNoticeAddMySecondStep\n          setStepIndex={setActiveStepIndex}\n          formData={formData}\n          onClose={onClose}\n        />\n      )}\n    </div>\n  );\n};\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const NoticesCategoryNavStyled = styled.ul`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 30px;\n    list-style: none;\n\n    @media (min-width: 768px) {\n        margin-bottom: 60px;\n        gap: 12px;\n    }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: flex;\n    padding: 8px 28px;\n    /* margin-right: 10px; */\n    border: 2px solid #F59256;\n    border-radius: 40px;\n    text-decoration: none;\n\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #FFFFFF;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    &.active {\n        background-color: #F59256;\n        color: #ffffff;\n        pointer-events: none;\n    }\n\n    @media (min-width: 768px) {\n        padding: 10px 28px;\n        font-size: 20px;\n        line-height: 1.35;\n        letter-spacing: 0.04em;\n    }\n`;\n\n\nexport const AddPetStyled = styled.button`\n    position: fixed;\n    bottom: 40px;\n    right: 20px;\n    z-index: 10;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n\n    width: 80px;\n    height: 80px;\n    padding: 16px;\n    border-radius: 50%;\n    border: none;\n    color: #ffffff;\n    background: #F59256;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    font-size: 12px;\n    line-height: 1.33;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        position: static;\n        z-index: 0;\n\n        flex-direction: row-reverse;\n        flex-wrap: nowrap;\n\n        margin-left: auto;\n        width: 129px;\n        height: 44px;\n        padding: 0;\n        border-radius: 40px;\n        background-color: #FDF7F2;\n        box-shadow: none;\n        \n        \n\n        span {\n            display: block;\n            width: 73px;\n            font-weight: 500;\n            font-size: 20px;\n            line-height: 1.35;\n            color: #111111;\n        }\n\n        div {\n            margin-left: 12px;\n            height: 32px;\n            background-color: #f06b19;\n            border-radius: 50%;\n            \n        }\n        \n    }\n`;\n\n\nexport const NavLinkContainerStyled = styled.div`\n    @media (min-width: 768px) {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n\n\n","// import { NavLink } from 'react-router-dom';\nimport { Modal } from 'components/Modal/Modal';\nimport { ModalAddNotice } from 'components/ModalAddNotice/ModalAddNotice';\nimport { useAuth, useToggle } from 'hooks';\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { NavLinkContainerStyled, NoticesCategoryNavStyled, NavLinkStyled, AddPetStyled } from './NoticesCategoryNav.styled';\n\nconst NotiesCategoryNav = () => {\n  const { isLoggedIn } = useAuth();\n  const { isOpen, open, close } = useToggle();\n\n\n  // const isLoggedIn = true;\n\n  return (    \n    <NavLinkContainerStyled>\n      <NoticesCategoryNavStyled>        \n        <li>\n          <NavLinkStyled to=\"lost-found\">lost/found</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"in-good-hands\">in good hands</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"sell\" >sell</NavLinkStyled>\n        </li>\n        {\n          isLoggedIn && \n          <>\n            <li>\n              <NavLinkStyled to=\"favorite-ads\">favorite ads</NavLinkStyled>\n            </li>\n            <li>\n              <NavLinkStyled to=\"my-ads\">my ads</NavLinkStyled>\n            </li>\n          </>            \n        }\n      </ NoticesCategoryNavStyled>\n      <AddPetStyled type='button' onClick={open}><div><AiOutlinePlus size={32} /></div> <span>Add pet</span></AddPetStyled>\n      {isLoggedIn && <Modal isOpen={isOpen} onClose={close}>\n        <ModalAddNotice onClose={close}/>\n      </Modal>}\n    </ NavLinkContainerStyled>\n    \n    \n  );\n};\n\nexport default NotiesCategoryNav;\n","import { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport {NoticesStyled } from './Notices.styled';\nimport { useEffect } from 'react';\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { searchNoticesSet } from 'redux/notices/searchSlice';\n\nimport Search from 'components/Search/Search';\nimport NoticesCategoryNav from 'components/NoticesCategoryNav/NoticesCategoryNav';\nimport { Categories } from 'utils/noticesCatList';\n\n\nconst Notices = () => {\n  const navigate = useNavigate();\n  const { categoryName } = useParams();\n  const { isLoggedIn } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn &&\n      (categoryName === Categories.FAVORITE_ADS || categoryName === Categories.MY_ADS))\n      navigate('/login');    \n\n    if (!Object.values(Categories).includes(categoryName)) navigate(Categories.SELL);\n   \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categoryName, isLoggedIn]);\n\n  const getInputValue = value => dispatch(searchNoticesSet(value));\n\n\n\n  return (\n    <NoticesStyled>\n      <h1>Find your favorite pet</h1>\n      \n      <Search getValueMethod={getInputValue} />\n      \n      <NoticesCategoryNav />\n\n      <Outlet />\n    </NoticesStyled>\n  );\n};\n\nexport default Notices;\n"],"names":["SearchStyled","styled","getValueMethod","useState","inputValue","setInputValue","useEffect","type","placeholder","value","onChange","e","target","onClick","size","color","NoticesStyled","FormContainer","Container","TitleModal","Description","RadioBtnBox","RadioInput","Field","RadioBtnCategory","FieldStyled","LabelField","LabelFieldMyPetPhoto","LabelFieldMyPetComment","LabelFieldTitle","ErrorText","ContainerButton","Button","CancelBack","ContainerSex","TitleInput","TitleInputMyPet","ContainerSexVariant","Icon","Sex","titleRegexp","validationFistStep","yup","shape","title","trim","min","max","matches","required","name","breed","SUPPORTED_FORMATS","validationSecondStep","location","comments","price","theSex","petAvatar","test","includes","ModalAddNoticeAddMyPetFirstStep","onClose","setStepIndex","setFormData","formData","initialValues","birthday","category","validationSchema","onSubmit","values","data","errors","touched","handleChange","handleSubmit","handleBlur","isValid","dirty","onBlur","className","disabled","ModalAddNoticeAddMySecondStep","dispatch","useDispatch","sex","image","console","log","addNotice","submitAddNoticeForm","setFieldValue","event","currentTarget","files","defaultValue","categories","id","ModalAddNoticeFistStep","map","ImgBox","Img","UploadImage","imagePreview","setImagePreview","reader","FileReader","readAsDataURL","onload","setTimeout","result","src","ModalAddNoticeSecondStep","ModalAddNotice","activeStepIndex","setActiveStepIndex","NoticesCategoryNavStyled","NavLinkStyled","NavLink","AddPetStyled","NavLinkContainerStyled","isLoggedIn","useAuth","useToggle","isOpen","open","close","to","Modal","navigate","useNavigate","categoryName","useParams","Categories","Object","Search","searchNoticesSet","NoticesCategoryNav"],"sourceRoot":""}