{"version":3,"file":"static/js/188.a9fe8647.chunk.js","mappings":"iOAEaA,EAAgBC,EAAAA,GAAAA,IAAH,6X,2DCAbC,EAAeD,EAAAA,GAAAA,IAAH,8vC,SCiCzB,EA7Be,SAAC,GAAwB,IAAtBE,EAAqB,EAArBA,eAChB,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRJ,EAAeE,EAEhB,GAAE,CAACA,KAIF,UAACH,EAAD,YACE,kBACEM,KAAK,OACLC,YAAY,SACZC,MAAOL,EACPM,SAAU,SAAAC,GAAC,OAAIN,EAAcM,EAAEC,OAAOH,MAA3B,KAGb,mBACEF,KAAK,SACLM,QAAS,kBAAMR,EAAc,GAApB,EAFX,SAIGD,GAAa,SAAC,MAAD,CAAsBU,KAAM,GAAIC,MAAO,aAAgB,SAAC,MAAD,CAAiBD,KAAM,GAAIC,MAAO,gBAK9G,E,UC9BYC,EAA2BhB,EAAAA,GAAAA,GAAH,uTAiBxBiB,GAAgBjB,EAAAA,EAAAA,IAAOkB,EAAAA,GAAPlB,CAAH,gxBAsCbmB,EAAenB,EAAAA,GAAAA,OAAH,y0CAoEZoB,EAAyBpB,EAAAA,GAAAA,IAAH,iICpFnC,EArC0B,WACxB,IAAQqB,GAAeC,EAAAA,EAAAA,KAAfD,WAIR,OACE,UAACD,EAAD,YACE,UAACJ,EAAD,YACE,yBACE,SAACC,EAAD,CAAeM,GAAG,OAAlB,qBAEF,yBACE,SAACN,EAAD,CAAeM,GAAG,aAAlB,2BAEF,yBACE,SAACN,EAAD,CAAeM,GAAG,gBAAlB,6BAGAF,IACA,iCACE,yBACE,SAACJ,EAAD,CAAeM,GAAG,eAAlB,6BAEF,yBACE,SAACN,EAAD,CAAeM,GAAG,SAAlB,6BAMR,UAACJ,EAAD,YAAc,0BAAK,SAAC,MAAD,CAAeL,KAAM,OAAxC,KAAqD,2CAK1D,ECxCYU,EAAa,CACtBC,KAAM,OACNC,WAAY,aACZC,cAAe,gBACfC,aAAc,eACdC,OAAQ,UCwCZ,EAjCgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACAX,GAAeC,EAAAA,EAAAA,KAAfD,WACFa,GAAWC,EAAAA,EAAAA,OAEjB7B,EAAAA,EAAAA,YAAU,WACHe,GACFW,IAAiBR,EAAWI,cAAgBI,IAAiBR,EAAWK,QACzEC,EAAS,UAENM,OAAOC,OAAOb,GAAYc,SAASN,IAAeF,EAASN,EAAWC,KAG5E,GAAE,CAACO,EAAcX,IAMlB,OACE,UAACtB,EAAD,YACE,oDAEA,SAAC,EAAD,CAAQG,eARU,SAAAO,GAAK,OAAIyB,GAASK,EAAAA,EAAAA,GAAiB9B,GAA9B,KAUvB,SAAC+B,EAAD,KAEA,SAAC,KAAD,MAGL,C","sources":["pages/Notices/Notices.styled.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","components/NoticesCategoryNav/NoticesCategoryNav.styled.jsx","components/NoticesCategoryNav/NoticesCategoryNav.jsx","utils/noticesCatList.js","pages/Notices/Notices.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const NoticesStyled = styled.div`    \n    padding-top: 40px;\n    padding-bottom: 68px;\n\n    h1 {\n        margin-bottom: 28px;\n        font-size: 24px;\n        line-height: 1.4;\n        text-align: center;\n        color: #111111;\n    }\n\n    @media (min-width: 768px) {\n        h1 {\n            margin-bottom: 40px;\n            font-size: 48px;\n        }               \n    }\n`;\n","import styled from \"styled-components\";\n\nexport const SearchStyled = styled.div`\n    position: relative;\n\n    input {\n        width: 280px;\n        height: 40px;\n        margin-bottom: 28px;\n        padding: 10px 42px 10px 12px;\n        box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n        border-radius: 20px;\n        border: none;\n        \n        font-weight: 500;\n        font-size: 16px;\n        line-height: 1,4;\n        letter-spacing: 0.04em;\n        color: #535353;\n    }\n\n    button {\n        position: absolute;\n        top: 6px;\n        right: 12px;\n\n        height: 28px;\n        padding: 0;\n        \n        background-color: #ffffff;\n        border: none;\n\n        cursor: pointer;\n    }\n\n    @media (min-width: 768px) {\n        text-align: center;\n\n        input {\n            width: 608px;\n            height: 44px;\n            \n            margin-bottom: 40px;\n            padding: 8px 48px 8px 20px;            \n            border-radius: 40px;\n            \n            \n            font-weight: 500;\n            font-size: 20px;\n        }\n        \n        button {           \n            top: 8px;\n            right: 60px;\n        }\n    }\n\n    @media (min-width: 1280px) {        \n        button {             \n            right: 330px;\n        }\n    }\n`;","\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { AiOutlineSearch, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport { SearchStyled } from \"./Search.styled\";\n\nconst Search = ({ getValueMethod }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    getValueMethod(inputValue);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [inputValue])\n\n\n  return (\n    <SearchStyled>\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      />\n\n      <button\n        type=\"button\"\n        onClick={() => setInputValue('')}\n      >\n        {inputValue ? <AiOutlineCloseCircle size={28} color={'#111111'} /> : <AiOutlineSearch size={24} color={'#111111'} />}\n      </button>\n      \n    </SearchStyled>\n  );\n};\n\nexport default Search;\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const NoticesCategoryNavStyled = styled.ul`\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    flex-wrap: wrap;\n    gap: 8px;\n    margin: 0;\n    padding: 0;\n    margin-bottom: 30px;\n    list-style: none;\n\n    @media (min-width: 768px) {\n        margin-bottom: 60px;\n        gap: 12px;\n    }\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n    display: flex;\n    padding: 8px 28px;\n    /* margin-right: 10px; */\n    border: 2px solid #F59256;\n    border-radius: 40px;\n    text-decoration: none;\n\n    font-weight: 500;\n    font-size: 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    color: #111111;\n    background: #FFFFFF;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    &.active {\n        background-color: #F59256;\n        color: #ffffff;\n        pointer-events: none;\n    }\n\n    @media (min-width: 768px) {\n        padding: 10px 28px;\n        font-size: 20px;\n        line-height: 1.35;\n        letter-spacing: 0.04em;\n    }\n`;\n\n\nexport const AddPetStyled = styled.button`\n    position: fixed;\n    bottom: 40px;\n    right: 20px;\n    z-index: 10;\n\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: center;\n\n    width: 80px;\n    height: 80px;\n    padding: 16px;\n    border-radius: 50%;\n    border: none;\n    color: #ffffff;\n    background: #F59256;\n    box-shadow: 7px 4px 14px rgba(49, 21, 4, 0.07);\n    font-size: 12px;\n    line-height: 1.33;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n                \n\n    :hover,\n    :focus {\n        background-color: rgb(245, 146, 86, 0.5);\n    }\n\n    @media (min-width: 768px) {\n        position: static;\n        z-index: 0;\n\n        flex-direction: row-reverse;\n\n        margin-left: 101px;\n        width: 129px;\n        height: 44px;\n        padding: 0;\n        border-radius: 40px;\n        background-color: #FDF7F2;\n        box-shadow: none;\n        \n        \n\n        span {\n            font-weight: 500;\n            font-size: 20px;\n            line-height: 1.35;\n            color: #111111;\n        }\n\n        div {\n            margin-left: 12px;\n            height: 32px;\n            background-color: #f06b19;\n            border-radius: 50%;\n            \n        }\n        \n    }\n`;\n\n\nexport const NavLinkContainerStyled = styled.div`\n    @media (min-width: 768px) {\n        display: flex;\n        justify-content: space-between;\n    }\n`;\n\n\n","// import { NavLink } from 'react-router-dom';\nimport { useAuth } from 'hooks';\nimport { AiOutlinePlus } from \"react-icons/ai\";\nimport { NavLinkContainerStyled, NoticesCategoryNavStyled, NavLinkStyled, AddPetStyled } from './NoticesCategoryNav.styled';\n\nconst NotiesCategoryNav = () => {\n  const { isLoggedIn } = useAuth();\n\n  // const isLoggedIn = true;\n\n  return (    \n    <NavLinkContainerStyled>\n      <NoticesCategoryNavStyled>\n        <li>\n          <NavLinkStyled to=\"sell\" >sell</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"lost-found\">lost/found</NavLinkStyled>\n        </li>\n        <li>\n          <NavLinkStyled to=\"in-good-hands\">in good hands</NavLinkStyled>\n        </li>\n        {\n          isLoggedIn && \n          <>\n            <li>\n              <NavLinkStyled to=\"favorite-ads\">favorite ads</NavLinkStyled>\n            </li>\n            <li>\n              <NavLinkStyled to=\"my-ads\">my ads</NavLinkStyled>\n            </li>\n          </>            \n        }\n        \n      </ NoticesCategoryNavStyled>\n      <AddPetStyled><div><AiOutlinePlus size={32} /></div> <span>Add pet</span></AddPetStyled>\n    </ NavLinkContainerStyled>\n    \n    \n  );\n};\n\nexport default NotiesCategoryNav;\n","export const Categories = {\n    SELL: 'sell',\n    LOST_FOUND: 'lost-found',\n    IN_GOOD_HANDS: 'in-good-hands',\n    FAVORITE_ADS: 'favorite-ads',\n    MY_ADS: 'my-ads'\n};","import { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport {NoticesStyled } from './Notices.styled';\nimport { useEffect } from 'react';\nimport { useAuth } from 'hooks';\nimport { useDispatch } from 'react-redux';\nimport { searchNoticesSet } from 'redux/notices/searchSlice';\n\nimport Search from 'components/Search/Search';\nimport NoticesCategoryNav from 'components/NoticesCategoryNav/NoticesCategoryNav';\nimport { Categories } from 'utils/noticesCatList';\n\n\nconst Notices = () => {\n  const navigate = useNavigate();\n  const { categoryName } = useParams();\n  const { isLoggedIn } = useAuth();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn &&\n      (categoryName === Categories.FAVORITE_ADS || categoryName === Categories.MY_ADS))\n      navigate('/login');    \n\n    if (!Object.values(Categories).includes(categoryName)) navigate(Categories.SELL);\n   \n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [categoryName, isLoggedIn]);\n\n  const getInputValue = value => dispatch(searchNoticesSet(value));\n\n\n\n  return (\n    <NoticesStyled>\n      <h1>Find your favorite pet</h1>\n      \n      <Search getValueMethod={getInputValue} />\n      \n      <NoticesCategoryNav />\n\n      <Outlet />\n    </NoticesStyled>\n  );\n};\n\nexport default Notices;\n"],"names":["NoticesStyled","styled","SearchStyled","getValueMethod","useState","inputValue","setInputValue","useEffect","type","placeholder","value","onChange","e","target","onClick","size","color","NoticesCategoryNavStyled","NavLinkStyled","NavLink","AddPetStyled","NavLinkContainerStyled","isLoggedIn","useAuth","to","Categories","SELL","LOST_FOUND","IN_GOOD_HANDS","FAVORITE_ADS","MY_ADS","navigate","useNavigate","categoryName","useParams","dispatch","useDispatch","Object","values","includes","searchNoticesSet","NoticesCategoryNav"],"sourceRoot":""}