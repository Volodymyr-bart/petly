{"version":3,"file":"static/js/617.bf676425.chunk.js","mappings":"sLAEaA,E,QAAsBC,GAAAA,IAAH,8V,6KCCnBC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mLAYVG,EAAiBH,EAAAA,GAAAA,IAAH,mIASdI,GAAcJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,qWAkBXM,EAAeN,EAAAA,GAAAA,IAAH,sFAOZO,EAAWP,EAAAA,GAAAA,IAAH,4CAMRQ,GAAqBR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,iGAOlBU,EAASV,EAAAA,GAAAA,OAAH,uTAmBNW,EAAaX,EAAAA,GAAAA,EAAH,uIASVY,EAAcZ,EAAAA,GAAAA,EAAH,kI,uCC3ElBa,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,OAAW,CACxBH,MAAOG,EAAAA,SAAaH,MAAM,wBAAwBI,QARlD,+EAQuE,yBAAyBC,SAAS,qBACzGJ,SAAUE,EAAAA,SACPC,QAbc,QAaM,kCACpBE,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRF,SAAS,0BAIDG,EAAY,WACvB,OAAwCC,EAAAA,EAAAA,WAAS,GAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IACxBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,QAAQC,IAAIP,EACb,GAAE,CAACA,IAcJ,OACE,SAAC,KAAD,CAAQb,cAAeA,EAAeqB,SAbnB,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAE7BP,GACEQ,EAAAA,EAAAA,IAAM,CACJvB,MAAOqB,EAAOrB,MACdC,SAAUoB,EAAOpB,YAEhBW,GACHU,GACH,EAI+DE,iBAAkBtB,EAAhF,SACG,YAA+D,EAA7DuB,aAA6D,EAA/CJ,OAA+C,EAAvCK,OAAuC,EAA/BC,QAA+B,EAAtBC,gBACtC,OAAO,UAACzC,EAAD,CAAa0C,aAAa,MAA1B,WACL,UAACxC,EAAD,YACA,UAACI,EAAD,YACE,SAACH,EAAD,CAAawC,KAAK,QAAQC,KAAK,QAAQC,YAAY,WACnD,SAACtC,EAAD,CAAoBqC,KAAK,QAAQE,UAAU,UAE3C,UAACxC,EAAD,YACA,SAACH,EAAD,CAAawC,KAAMpB,EAAe,OAAS,WAAYqB,KAAK,WAAWC,YAAY,cACnF,SAACxC,EAAD,CAAc0C,QAAS,kBAAMvB,GAAiBD,EAAvB,EAAvB,SAA8DA,GAAe,SAAC,MAAD,CAAWyB,KAAM,MAAS,SAAC,MAAD,CAAaA,KAAM,QAC1H,SAAEzC,EAAF,CAAqBqC,KAAK,WAAWE,UAAU,SAGhC,MAAdrB,IAAqB,SAACd,EAAD,sEAExB,SAACF,EAAD,CAAQkC,KAAK,SAAb,qBACA,UAACjC,EAAD,sCAAmC,SAAC,KAAD,CAASuC,GAAG,YAAZ,2BAExC,GAGN,E,wCCpEYC,EAAYnD,EAAAA,GAAAA,QAAH,uuBAIGoD,EAYEC,EAQAC,GAOdC,EAAcvD,EAAAA,GAAAA,GAAH,kOCjCT,SAASwD,IACtB,OACE,SAACL,EAAD,WACE,UAAC,IAAD,YACE,SAACI,EAAD,qBACA,SAACjC,EAAD,QAIP,C","sources":["components/AuthContainer/AuthContainer.styled.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const AuthContainerStyled = styled.div`\n  margin: 0;\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding: 60px 80px 40px 80px;\n    left: 80px;\n    top: 276px;\n    background: #ffffff;\n    box-shadow: 7px 4px 14px rgba(0, 0, 0, 0.11);\n    border-radius: 40px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 60px 80px;\n  }\n`;\n","import styled from 'styled-components';\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    width: 100%;\n\n    @media screen and (min-width: 768px) {\n        \n        }\n\n        @media screen and (min-width: 1280px) {\n      \n        }\n`;\n\nexport const InputContainer = styled.div`\nposition: relative;  \ndisplay: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 40px;\n \n`;\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    padding: 11px 45px 11px 14px;\n    line-height: 1.35;\n    letter-spacing: 0.04em;\n    background: #FDF7F2;\n    border: 1px solid rgba(245, 146, 86, 0.5);\n    border-radius: 40px;\n        :hover,\n        :focus {\n        cursor: pointer;\n        outline: 2px solid #F59256;\n        }\n    \n\n        \n`;\n\nexport const ShowPassword = styled.div`\n    position: absolute;\n    bottom: 10px;\n    right: 5%;\n\n`;\n\nexport const InputBox = styled.div`\nposition: relative\n`;\n\n\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\nposition: absolute;\nleft: 16px;\nfont-size: 16px;\n    color: #9d3158;\n`;\n\nexport const Button = styled.button`\nmargin-bottom: 40px;\nwidth: 100%;\npadding: 10px 28px;\nbackground: #F59256;\nborder-radius: 40px;\nborder: none;\nfont-weight: 500;\nfont-size: 20px;\nline-height: 1.35;\nletter-spacing: 0.04em;\ncolor: #FFFFFF;\n\n  :hover {\n    background: #f7a878;\n      cursor: pointer;\n    } \n`;\n\nexport const TextStyled = styled.p`\ntext-align: center;\nletter-spacing: 0.04em;\n> a {\n  text-decoration-line: underline;\n  color: #3091eb;\n}\n`;\n\nexport const ErrorStyled = styled.p`\nposition: absolute;\nbottom: -40px;\nleft: 16px;\nfont-size: 16px;\ncolor: #9d3158;\ntext-align: center;\n`;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport {useState, useEffect} from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { logIn } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport { Button, FormStyled, FieldStyled,  ErrorMessageStyled, TextStyled, InputContainer, ShowPassword, ErrorStyled, InputBox} from './LoginForm.styled';\nimport * as yup from 'yup';\nimport { RxEyeClosed, RxEyeOpen} from 'react-icons/rx'\nimport { selectLoginError } from 'redux/auth/selectors';\n\nconst passRegexp = /^\\S+$/;\nconst emailRegexp =\n  // eslint-disable-next-line no-useless-escape\n  /^(^[A-Za-z0-9]+[A-Za-z0-9_\\-\\.]{2,})+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\nconst initialValues = {\n  email: '',\n  password: ''\n}\n\nconst schema = yup.object({\n  email: yup.string().email(\"Invalid email addres\").matches(emailRegexp, \"Invalid email address\").required(\"Email is required\"),\n  password: yup.string()\n    .matches(passRegexp, \"Password cannot contain spaces\")\n    .min(7, \"Password must be at least 7 characters\")\n    .max(32, \"Password must be at most 32 characters\")\n    .required(\"Password is required\"),\n});   \n\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const errorCode = useSelector(selectLoginError);\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    console.log(errorCode);\n  }, [errorCode])\n\n  const handleSubmit = (values, {resetForm}) => {\n\n    dispatch(\n      logIn({\n        email: values.email,\n        password: values.password,\n      }));\n      if(errorCode) return;\n      resetForm();   \n  };\n\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit} validationSchema={schema}>\n      {({handleChange, values, errors, touched, setFieldTouched }) => {\n          return <FormStyled  autoComplete='off'>\n            <InputContainer>\n            <InputBox>\n              <FieldStyled type=\"email\" name=\"email\" placeholder='Email'/>\n              <ErrorMessageStyled name=\"email\" component=\"p\"/>\n            </InputBox>  \n              <InputBox>\n              <FieldStyled type={showPassword ? \"text\" : \"password\"} name=\"password\" placeholder='Password'/>\n              <ShowPassword onClick={() => setShowPassword(!showPassword)}>{showPassword ? <RxEyeOpen size={18} /> : <RxEyeClosed size={18}/> }</ShowPassword>\n              < ErrorMessageStyled name=\"password\" component=\"p\"/>\n              </InputBox>\n              \n              {errorCode === 401 && <ErrorStyled>Email or Password is wrong. Please check your data.</ErrorStyled>}\n              </InputContainer>\n            <Button type=\"submit\">Log in</Button>\n            <TextStyled>Don't have an account? <NavLink to=\"/register\">Register</NavLink></TextStyled>\n          </FormStyled>\n      }}\n        </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nimport bgMobImg from '../../imagesAuth/bg-img-auth-mob.png';\nimport bgTabImg from '../../imagesAuth/bg-img-auth-tab.png';\nimport bgWebImg from '../../imagesAuth/bg-img-auth-web.png';\n\nexport const Container = styled.section`\nwidth: 100%;\npadding: 44px 20px 159px 20px;\n// height: calc(100vh - 74px);\nbackground-image: url('${bgMobImg}');\nbackground-repeat: no-repeat;\nbackground-size: contain;\nbackground-position: bottom;\n\n@media screen and (min-width: 320px) {\n      width: 320px;\n\n@media screen and (min-width: 768px) {\n    width: 768px;\n  padding: 180px 80px 300px 80px;\n\n  background-image: url('${bgTabImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n}\n@media screen and (min-width: 1280px) {\n    width: 1280px;\n  padding: 70px 331px 147px 331px;\n  background-image: url('${bgWebImg}');\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom 50px;\n}\n`;\n\nexport const TitleStyled = styled.h2`\n    // font-family: 'Manrope';\n    font-weight: 700;\n    font-size: 24px;\n    line-height: 1.38;\n    text-align: center;\n    letter-spacing: 0.04em;\n    color: #111111;\n    margin-bottom: 40px;\n`;","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { AuthContainerStyled } from 'components/AuthContainer/AuthContainer.styled';\nimport { TitleStyled, Container } from './Login.styled';\n\nexport default function Login() {\n  return (\n    <Container>\n      <AuthContainerStyled>\n        <TitleStyled>Login</TitleStyled>\n        <LoginForm />\n      </AuthContainerStyled>\n    </Container>\n  );\n}\n"],"names":["AuthContainerStyled","styled","FormStyled","Form","InputContainer","FieldStyled","Field","ShowPassword","InputBox","ErrorMessageStyled","ErrorMessage","Button","TextStyled","ErrorStyled","initialValues","email","password","schema","yup","matches","required","min","max","LoginForm","useState","showPassword","setShowPassword","errorCode","useSelector","selectLoginError","dispatch","useDispatch","useEffect","console","log","onSubmit","values","resetForm","logIn","validationSchema","handleChange","errors","touched","setFieldTouched","autoComplete","type","name","placeholder","component","onClick","size","to","Container","bgMobImg","bgTabImg","bgWebImg","TitleStyled","Login"],"sourceRoot":""}